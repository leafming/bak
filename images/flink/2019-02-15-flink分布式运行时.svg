<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2303" height="7723" style="background-color: rgb(251, 251, 251); visibility: visible; background-position: initial initial; background-repeat: initial initial;" viewBox="0 0 2303 7723"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M119.5,4034.5A217,3422.5,0,0,1,336.5,612"></path><path id="kity_path_33" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M548.5,612.5C568.5,612,568.5,128.5,588.5,128.5"></path><path id="kity_path_35" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M636.5,128.5C656.5,128.5,656.5,102.5,676.5,102.5"></path><path id="kity_path_37" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M636.5,128.5C656.5,128.5,656.5,225.5,676.5,225.5"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M548.5,612.5C568.5,612,568.5,303.5,588.5,303.5"></path><path id="kity_path_41" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M655.5,303.5C675.5,303.5,675.5,277.5,695.5,277.5"></path><path id="kity_path_43" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M655.5,303.5C675.5,303.5,675.5,329.5,695.5,329.5"></path><path id="kity_path_45" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M548.5,612.5C568.5,612,568.5,1095.5,588.5,1095.5"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M700.5,1095.5C720.5,1095.5,720.5,538.5,740.5,538.5"></path><path id="kity_path_49" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M784.5,538.5C804.5,538.5,804.5,381.5,824.5,381.5"></path><path id="kity_path_51" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M784.5,538.5C804.5,538.5,804.5,433.5,824.5,433.5"></path><path id="kity_path_53" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M784.5,538.5C804.5,538.5,804.5,564.5,824.5,564.5"></path><path id="kity_path_55" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M993.5,564.5C1013.5,564.5,1013.5,564.5,1033.5,564.5"></path><path id="kity_path_57" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M784.5,538.5C804.5,538.5,804.5,695.5,824.5,695.5"></path><path id="kity_path_59" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M700.5,1095.5C720.5,1095.5,720.5,826.5,740.5,826.5"></path><path id="kity_path_61" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M784.5,826.5C804.5,826.5,804.5,747.5,824.5,747.5"></path><path id="kity_path_63" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M784.5,826.5C804.5,826.5,804.5,799.5,824.5,799.5"></path><path id="kity_path_65" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M784.5,826.5C804.5,826.5,804.5,878.5,824.5,878.5"></path><path id="kity_path_67" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1018.5,878.5C1038.5,878.5,1038.5,852.5,1058.5,852.5"></path><path id="kity_path_69" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1431.5,852.5C1451.5,852.5,1451.5,852.5,1471.5,852.5"></path><path id="kity_path_71" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1018.5,878.5C1038.5,878.5,1038.5,904.5,1058.5,904.5"></path><path id="kity_path_73" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1376.5,904.5C1396.5,904.5,1396.5,904.5,1416.5,904.5"></path><path id="kity_path_75" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M700.5,1095.5C720.5,1095.5,720.5,1243.5,740.5,1243.5"></path><path id="kity_path_77" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M912.5,1243.5C932.5,1243.5,932.5,1078.5,952.5,1078.5"></path><path id="kity_path_79" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1112.5,1078.5C1132.5,1078.5,1132.5,1079,1152.5,1079"></path><path id="kity_path_81" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M912.5,1243.5C932.5,1243.5,932.5,1408.5,952.5,1408.5"></path><path id="kity_path_83" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1296.5,1408.5C1316.5,1408.5,1316.5,1252.5,1336.5,1252.5"></path><path id="kity_path_85" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1296.5,1408.5C1316.5,1408.5,1316.5,1304.5,1336.5,1304.5"></path><path id="kity_path_87" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1296.5,1408.5C1316.5,1408.5,1316.5,1356.5,1336.5,1356.5"></path><path id="kity_path_89" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1296.5,1408.5C1316.5,1408.5,1316.5,1408.5,1336.5,1408.5"></path><path id="kity_path_91" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1296.5,1408.5C1316.5,1408.5,1316.5,1460.5,1336.5,1460.5"></path><path id="kity_path_93" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1296.5,1408.5C1316.5,1408.5,1316.5,1512.5,1336.5,1512.5"></path><path id="kity_path_95" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1296.5,1408.5C1316.5,1408.5,1316.5,1564.5,1336.5,1564.5"></path><path id="kity_path_97" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M700.5,1095.5C720.5,1095.5,720.5,1634.5,740.5,1634.5"></path><path id="kity_path_99" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M119.5,4034.5A217,1777,0,0,1,336.5,2257.5"></path><path id="kity_path_101" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M635.5,2257.5C655.5,2257.5,655.5,1792.5,675.5,1792.5"></path><path id="kity_path_103" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M855.5,1792.5C875.5,1792.5,875.5,1740.5,895.5,1740.5"></path><path id="kity_path_105" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M939.5,1740.5C959.5,1740.5,959.5,1714.5,979.5,1714.5"></path><path id="kity_path_107" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M939.5,1740.5C959.5,1740.5,959.5,1766.5,979.5,1766.5"></path><path id="kity_path_109" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M855.5,1792.5C875.5,1792.5,875.5,1844.5,895.5,1844.5"></path><path id="kity_path_111" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M939.5,1844.5C959.5,1844.5,959.5,1818.5,979.5,1818.5"></path><path id="kity_path_113" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M939.5,1844.5C959.5,1844.5,959.5,1870.5,979.5,1870.5"></path><path id="kity_path_115" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M635.5,2257.5C655.5,2257.5,655.5,2040.5,675.5,2040.5"></path><path id="kity_path_117" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M854.5,2040.5C874.5,2040.5,874.5,1984.5,894.5,1984.5"></path><path id="kity_path_119" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M938.5,1984.5C958.5,1984.5,958.5,1923.5,978.5,1923.5"></path><path id="kity_path_121" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M938.5,1984.5C958.5,1984.5,958.5,1984.5,978.5,1984.5"></path><path id="kity_path_123" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M938.5,1984.5C958.5,1984.5,958.5,2045.5,978.5,2045.5"></path><path id="kity_path_125" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M854.5,2040.5C874.5,2040.5,874.5,2097.5,894.5,2097.5"></path><path id="kity_path_127" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M938.5,2097.5C958.5,2097.5,958.5,2097.5,978.5,2097.5"></path><path id="kity_path_129" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M635.5,2257.5C655.5,2257.5,655.5,2200.5,675.5,2200.5"></path><path id="kity_path_131" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M743.5,2200.5C763.5,2200.5,763.5,2200.5,783.5,2200.5"></path><path id="kity_path_133" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M851.5,2200.5C871.5,2200.5,871.5,2148.5,891.5,2148.5"></path><path id="kity_path_135" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M851.5,2200.5C871.5,2200.5,871.5,2200.5,891.5,2200.5"></path><path id="kity_path_137" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M851.5,2200.5C871.5,2200.5,871.5,2252.5,891.5,2252.5"></path><path id="kity_path_139" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M635.5,2257.5C655.5,2257.5,655.5,2356.5,675.5,2356.5"></path><path id="kity_path_141" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M812.5,2356.5C832.5,2356.5,832.5,2304.5,852.5,2304.5"></path><path id="kity_path_143" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M812.5,2356.5C832.5,2356.5,832.5,2356.5,852.5,2356.5"></path><path id="kity_path_145" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M812.5,2356.5C832.5,2356.5,832.5,2408.5,852.5,2408.5"></path><path id="kity_path_147" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M635.5,2257.5C655.5,2257.5,655.5,2740.5,675.5,2740.5"></path><path id="kity_path_149" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M755.5,2740.5C775.5,2740.5,775.5,2529,795.5,2529"></path><path id="kity_path_151" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M755.5,2740.5C775.5,2740.5,775.5,2648.5,795.5,2648.5"></path><path id="kity_path_153" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M755.5,2740.5C775.5,2740.5,775.5,2816.5,795.5,2816.5"></path><path id="kity_path_155" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M863.5,2816.5C883.5,2816.5,883.5,2704.5,903.5,2704.5"></path><path id="kity_path_157" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M863.5,2816.5C883.5,2816.5,883.5,2764.5,903.5,2764.5"></path><path id="kity_path_159" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M863.5,2816.5C883.5,2816.5,883.5,2824.5,903.5,2824.5"></path><path id="kity_path_161" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M863.5,2816.5C883.5,2816.5,883.5,2880.5,903.5,2880.5"></path><path id="kity_path_163" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M863.5,2816.5C883.5,2816.5,883.5,2932.5,903.5,2932.5"></path><path id="kity_path_165" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M755.5,2740.5C775.5,2740.5,775.5,3002.5,795.5,3002.5"></path><path id="kity_path_167" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1293.5,3002.5C1313.5,3002.5,1313.5,3002.5,1333.5,3002.5"></path><path id="kity_path_169" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M119.5,4034.5A217,208,0,0,0,336.5,4242.5"></path><path id="kity_path_171" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M542.5,4242.5C562.5,4242.5,562.5,3314.5,582.5,3314.5"></path><path id="kity_path_173" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M749.5,3314.5C769.5,3314.5,769.5,3082.5,789.5,3082.5"></path><path id="kity_path_175" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M857.5,3082.5C877.5,3082.5,877.5,3082.5,897.5,3082.5"></path><path id="kity_path_177" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M749.5,3314.5C769.5,3314.5,769.5,3134.5,789.5,3134.5"></path><path id="kity_path_179" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M981.5,3134.5C1001.5,3134.5,1001.5,3134.5,1021.5,3134.5"></path><path id="kity_path_181" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M749.5,3314.5C769.5,3314.5,769.5,3238.5,789.5,3238.5"></path><path id="kity_path_183" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M857.5,3238.5C877.5,3238.5,877.5,3186.5,897.5,3186.5"></path><path id="kity_path_185" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M857.5,3238.5C877.5,3238.5,877.5,3238.5,897.5,3238.5"></path><path id="kity_path_187" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M857.5,3238.5C877.5,3238.5,877.5,3290.5,897.5,3290.5"></path><path id="kity_path_189" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1001.5,3290.5C1021.5,3290.5,1021.5,3290.5,1041.5,3290.5"></path><path id="kity_path_191" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M749.5,3314.5C769.5,3314.5,769.5,3547.5,789.5,3547.5"></path><path id="kity_path_193" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M857.5,3547.5C877.5,3547.5,877.5,3342.5,897.5,3342.5"></path><path id="kity_path_195" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M857.5,3547.5C877.5,3547.5,877.5,3484.5,897.5,3484.5"></path><path id="kity_path_197" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M965.5,3484.5C985.5,3484.5,985.5,3395.5,1005.5,3395.5"></path><path id="kity_path_199" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1085.5,3395.5C1105.5,3395.5,1105.5,3395.5,1125.5,3395.5"></path><path id="kity_path_201" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M965.5,3484.5C985.5,3484.5,985.5,3574.5,1005.5,3574.5"></path><path id="kity_path_203" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1061.5,3574.5C1081.5,3574.5,1081.5,3447.5,1101.5,3447.5"></path><path id="kity_path_205" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1061.5,3574.5C1081.5,3574.5,1081.5,3534.5,1101.5,3534.5"></path><path id="kity_path_207" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1145.5,3534.5C1165.5,3534.5,1165.5,3508.5,1185.5,3508.5"></path><path id="kity_path_209" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1145.5,3534.5C1165.5,3534.5,1165.5,3569.5,1185.5,3569.5"></path><path id="kity_path_211" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1061.5,3574.5C1081.5,3574.5,1081.5,3661.5,1101.5,3661.5"></path><path id="kity_path_213" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M857.5,3547.5C877.5,3547.5,877.5,3752.5,897.5,3752.5"></path><path id="kity_path_215" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M542.5,4242.5C562.5,4242.5,562.5,4262.5,582.5,4262.5"></path><path id="kity_path_217" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M669.5,4262.5C689.5,4262.5,689.5,3838.5,709.5,3838.5"></path><path id="kity_path_219" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M808.5,3838.5C828.5,3838.5,828.5,3812.5,848.5,3812.5"></path><path id="kity_path_221" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M808.5,3838.5C828.5,3838.5,828.5,3873.5,848.5,3873.5"></path><path id="kity_path_223" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M669.5,4262.5C689.5,4262.5,689.5,4141.5,709.5,4141.5"></path><path id="kity_path_225" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M832.5,4141.5C852.5,4141.5,852.5,3935.5,872.5,3935.5"></path><path id="kity_path_227" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M832.5,4141.5C852.5,4141.5,852.5,4101.5,872.5,4101.5"></path><path id="kity_path_229" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1163.5,4101.5C1183.5,4101.5,1183.5,3996.5,1203.5,3996.5"></path><path id="kity_path_231" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1163.5,4101.5C1183.5,4101.5,1183.5,4048.5,1203.5,4048.5"></path><path id="kity_path_233" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1163.5,4101.5C1183.5,4101.5,1183.5,4109.5,1203.5,4109.5"></path><path id="kity_path_235" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1163.5,4101.5C1183.5,4101.5,1183.5,4188.5,1203.5,4188.5"></path><path id="kity_path_237" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M832.5,4141.5C852.5,4141.5,852.5,4308,872.5,4308"></path><path id="kity_path_239" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1179.5,4308.5C1199.5,4308,1199.5,4269.5,1219.5,4269.5"></path><path id="kity_path_241" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1179.5,4308.5C1199.5,4308,1199.5,4356.5,1219.5,4356.5"></path><path id="kity_path_243" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1287.5,4356.5C1307.5,4356.5,1307.5,4330.5,1327.5,4330.5"></path><path id="kity_path_245" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1287.5,4356.5C1307.5,4356.5,1307.5,4382.5,1327.5,4382.5"></path><path id="kity_path_247" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M669.5,4262.5C689.5,4262.5,689.5,4686.5,709.5,4686.5"></path><path id="kity_path_249" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M868.5,4686.5C888.5,4686.5,888.5,4576.5,908.5,4576.5"></path><path id="kity_path_251" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1029.5,4576.5C1049.5,4576.5,1049.5,4485.5,1069.5,4485.5"></path><path id="kity_path_253" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1113.5,4485.5C1133.5,4485.5,1133.5,4433.5,1153.5,4433.5"></path><path id="kity_path_255" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1113.5,4485.5C1133.5,4485.5,1133.5,4485.5,1153.5,4485.5"></path><path id="kity_path_257" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1113.5,4485.5C1133.5,4485.5,1133.5,4537.5,1153.5,4537.5"></path><path id="kity_path_259" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1029.5,4576.5C1049.5,4576.5,1049.5,4667.5,1069.5,4667.5"></path><path id="kity_path_261" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1298.5,4667.5C1318.5,4667.5,1318.5,4589.5,1338.5,4589.5"></path><path id="kity_path_263" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1298.5,4667.5C1318.5,4667.5,1318.5,4667.5,1338.5,4667.5"></path><path id="kity_path_265" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1625.5,4667.5C1645.5,4667.5,1645.5,4641.5,1665.5,4641.5"></path><path id="kity_path_267" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1625.5,4667.5C1645.5,4667.5,1645.5,4693.5,1665.5,4693.5"></path><path id="kity_path_269" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1298.5,4667.5C1318.5,4667.5,1318.5,4745.5,1338.5,4745.5"></path><path id="kity_path_271" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M868.5,4686.5C888.5,4686.5,888.5,4797.5,908.5,4797.5"></path><path id="kity_path_273" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1034.5,4797.5C1054.5,4797.5,1054.5,4797.5,1074.5,4797.5"></path><path id="kity_path_275" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M542.5,4242.5C562.5,4242.5,562.5,4890.5,582.5,4890.5"></path><path id="kity_path_277" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M741.5,4890.5C761.5,4890.5,761.5,4849.5,781.5,4849.5"></path><path id="kity_path_279" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M741.5,4890.5C761.5,4890.5,761.5,4931.5,781.5,4931.5"></path><path id="kity_path_281" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1170.5,4931.5C1190.5,4931.5,1190.5,4932,1210.5,4932"></path><path id="kity_path_283" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M542.5,4242.5C562.5,4242.5,562.5,5161.5,582.5,5161.5"></path><path id="kity_path_285" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M705.5,5161.5C725.5,5161.5,725.5,5014.5,745.5,5014.5"></path><path id="kity_path_287" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1815.5,5014.5C1835.5,5014.5,1835.5,5014.5,1855.5,5014.5"></path><path id="kity_path_289" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M705.5,5161.5C725.5,5161.5,725.5,5092.5,745.5,5092.5"></path><path id="kity_path_291" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M945.5,5092.5C965.5,5092.5,965.5,5066.5,985.5,5066.5"></path><path id="kity_path_293" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M945.5,5092.5C965.5,5092.5,965.5,5118.5,985.5,5118.5"></path><path id="kity_path_295" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M705.5,5161.5C725.5,5161.5,725.5,5248.5,745.5,5248.5"></path><path id="kity_path_297" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M965.5,5248.5C985.5,5248.5,985.5,5170.5,1005.5,5170.5"></path><path id="kity_path_299" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M965.5,5248.5C985.5,5248.5,985.5,5222.5,1005.5,5222.5"></path><path id="kity_path_301" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M965.5,5248.5C985.5,5248.5,985.5,5274.5,1005.5,5274.5"></path><path id="kity_path_303" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M965.5,5248.5C985.5,5248.5,985.5,5326.5,1005.5,5326.5"></path><path id="kity_path_305" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M119.5,4034.5A217,2294,0,0,0,336.5,6328.5"></path><path id="kity_path_307" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M483.5,6328.5C503.5,6328.5,503.5,5466.5,523.5,5466.5"></path><path id="kity_path_309" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M567.5,5466.5C587.5,5466.5,587.5,5388.5,607.5,5388.5"></path><path id="kity_path_311" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M567.5,5466.5C587.5,5466.5,587.5,5440.5,607.5,5440.5"></path><path id="kity_path_313" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M567.5,5466.5C587.5,5466.5,587.5,5492.5,607.5,5492.5"></path><path id="kity_path_315" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M567.5,5466.5C587.5,5466.5,587.5,5544.5,607.5,5544.5"></path><path id="kity_path_317" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M483.5,6328.5C503.5,6328.5,503.5,6315.5,523.5,6315.5"></path><path id="kity_path_319" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M723.5,6315.5C743.5,6315.5,743.5,5853.5,763.5,5853.5"></path><path id="kity_path_321" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M961.5,5853.5C981.5,5853.5,981.5,5684.5,1001.5,5684.5"></path><path id="kity_path_323" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1045.5,5684.5C1065.5,5684.5,1065.5,5597.5,1085.5,5597.5"></path><path id="kity_path_325" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1045.5,5684.5C1065.5,5684.5,1065.5,5649.5,1085.5,5649.5"></path><path id="kity_path_327" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1045.5,5684.5C1065.5,5684.5,1065.5,5701.5,1085.5,5701.5"></path><path id="kity_path_329" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1045.5,5684.5C1065.5,5684.5,1065.5,5762.5,1085.5,5762.5"></path><path id="kity_path_331" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M961.5,5853.5C981.5,5853.5,981.5,5884.5,1001.5,5884.5"></path><path id="kity_path_333" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1057.5,5884.5C1077.5,5884.5,1077.5,5832.5,1097.5,5832.5"></path><path id="kity_path_335" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1057.5,5884.5C1077.5,5884.5,1077.5,5893.5,1097.5,5893.5"></path><path id="kity_path_337" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1057.5,5884.5C1077.5,5884.5,1077.5,5945.5,1097.5,5945.5"></path><path id="kity_path_339" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M961.5,5853.5C981.5,5853.5,981.5,6023.5,1001.5,6023.5"></path><path id="kity_path_341" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1069.5,6023.5C1089.5,6023.5,1089.5,5997.5,1109.5,5997.5"></path><path id="kity_path_343" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1069.5,6023.5C1089.5,6023.5,1089.5,6049.5,1109.5,6049.5"></path><path id="kity_path_345" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M723.5,6315.5C743.5,6315.5,743.5,6295.5,763.5,6295.5"></path><path id="kity_path_347" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M876.5,6295.5C896.5,6295.5,896.5,6204.5,916.5,6204.5"></path><path id="kity_path_349" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M960.5,6204.5C980.5,6204.5,980.5,6100.5,1000.5,6100.5"></path><path id="kity_path_351" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M960.5,6204.5C980.5,6204.5,980.5,6152.5,1000.5,6152.5"></path><path id="kity_path_353" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M960.5,6204.5C980.5,6204.5,980.5,6204.5,1000.5,6204.5"></path><path id="kity_path_355" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M960.5,6204.5C980.5,6204.5,980.5,6256.5,1000.5,6256.5"></path><path id="kity_path_357" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M723.5,6315.5C743.5,6315.5,743.5,6777.5,763.5,6777.5"></path><path id="kity_path_359" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M483.5,6328.5C503.5,6328.5,503.5,7190.5,523.5,7190.5"></path><path id="kity_path_361" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M567.5,7190.5C587.5,7190.5,587.5,7134.5,607.5,7134.5"></path><path id="kity_path_363" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M699.5,7134.5C719.5,7134.5,719.5,7108.5,739.5,7108.5"></path><path id="kity_path_365" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M699.5,7134.5C719.5,7134.5,719.5,7160.5,739.5,7160.5"></path><path id="kity_path_367" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M567.5,7190.5C587.5,7190.5,587.5,7247.5,607.5,7247.5"></path><path id="kity_path_369" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M729.5,7247.5C749.5,7247.5,749.5,7212.5,769.5,7212.5"></path><path id="kity_path_371" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M729.5,7247.5C749.5,7247.5,749.5,7273.5,769.5,7273.5"></path><path id="kity_path_1464" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M960.5,6204.5C980.5,6204.5,980.5,6308.5,1000.5,6308.5"></path><path id="kity_path_1478" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M876.5,6295.5C896.5,6295.5,896.5,6386.5,916.5,6386.5"></path><path id="kity_path_1502" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M984.5,6386.5C1004.5,6386.5,1004.5,6360.5,1024.5,6360.5"></path><path id="kity_path_1510" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M984.5,6386.5C1004.5,6386.5,1004.5,6412.5,1024.5,6412.5"></path><path id="kity_path_1521" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M915.5,6777.5C935.5,6777.5,935.5,6568.5,955.5,6568.5"></path><path id="kity_path_1529" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M999.5,6568.5C1019.5,6568.5,1019.5,6464.5,1039.5,6464.5"></path><path id="kity_path_1537" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M999.5,6568.5C1019.5,6568.5,1019.5,6516.5,1039.5,6516.5"></path><path id="kity_path_1546" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M999.5,6568.5C1019.5,6568.5,1019.5,6568.5,1039.5,6568.5"></path><path id="kity_path_1555" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M999.5,6568.5C1019.5,6568.5,1019.5,6620.5,1039.5,6620.5"></path><path id="kity_path_1563" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M999.5,6568.5C1019.5,6568.5,1019.5,6672.5,1039.5,6672.5"></path><path id="kity_path_1571" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M915.5,6777.5C935.5,6777.5,935.5,6742.5,955.5,6742.5"></path><path id="kity_path_1579" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1011.5,6742.5C1031.5,6742.5,1031.5,6742.5,1051.5,6742.5"></path><path id="kity_path_1589" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M915.5,6777.5C935.5,6777.5,935.5,6838.5,955.5,6838.5"></path><path id="kity_path_1613" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1023.5,6838.5C1043.5,6838.5,1043.5,6812.5,1063.5,6812.5"></path><path id="kity_path_1621" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1023.5,6838.5C1043.5,6838.5,1043.5,6864.5,1063.5,6864.5"></path><path id="kity_path_1629" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M915.5,6777.5C935.5,6777.5,935.5,6986.5,955.5,6986.5"></path><path id="kity_path_1637" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M999.5,6986.5C1019.5,6986.5,1019.5,6916.5,1039.5,6916.5"></path><path id="kity_path_1645" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M999.5,6986.5C1019.5,6986.5,1019.5,6986.5,1039.5,6986.5"></path><path id="kity_path_1657" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M999.5,6986.5C1019.5,6986.5,1019.5,7056.5,1039.5,7056.5"></path><path id="kity_path_1692" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M119.5,4034.5A217,3433,0,0,0,336.5,7467.5"></path><path id="kity_path_1700" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M494.5,7467.5C514.5,7467.5,514.5,7369.5,534.5,7369.5"></path><path id="kity_path_1708" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M578.5,7369.5C598.5,7369.5,598.5,7343.5,618.5,7343.5"></path><path id="kity_path_1716" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M494.5,7467.5C514.5,7467.5,514.5,7565.5,534.5,7565.5"></path><path id="kity_path_1724" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M669.5,7565.5C689.5,7565.5,689.5,7448.5,709.5,7448.5"></path><path id="kity_path_1732" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M777.5,7587.5C797.5,7587.5,797.5,7622.5,817.5,7622.5"></path><path id="kity_path_1740" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M578.5,7369.5C598.5,7369.5,598.5,7395.5,618.5,7395.5"></path><path id="kity_path_1756" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M669.5,7565.5C689.5,7565.5,689.5,7587.5,709.5,7587.5"></path><path id="kity_path_1764" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M777.5,7587.5C797.5,7587.5,797.5,7561.5,817.5,7561.5"></path><path id="kity_path_1774" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M669.5,7565.5C689.5,7565.5,689.5,7500.5,709.5,7500.5"></path><path id="kity_path_1782" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M669.5,7565.5C689.5,7565.5,689.5,7683.5,709.5,7683.5"></path><path id="kity_path_1790" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M832.5,7683.5C852.5,7683.5,852.5,7683.5,872.5,7683.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(115, 161, 191)" d="M25.5,4014.5h188a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-188a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="4026.5" x="44.5">2、flink分布式运行时</text></g></g><g id="kity_g_14" display="none"><path id="kity_path_15" fill="rgba(0, 92, 153, 0.5)" stroke="none" d="M709.5,7472.5h486v15h-486z"></path><path id="kity_path_16" fill="none" stroke="rgb(0, 76, 128)" d="M709.5,7472.5L1195.5,7472.5" stroke-width="1"></path></g><g id="minder_node2"><g id="node_expander34" style="cursor: pointer;"><path id="kity_path_1050" fill="white" stroke="gray" d="M337.5,612A6,6,0,1,1,325.5,612A6,6,0,1,1,337.5,612"></path><path id="kity_path_1051" fill="none" stroke="gray" d="M327,612L336,612"></path></g><path id="node_outline35" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M341.5,588.5h204a3,3,0,0,1,3,3v41a3,3,0,0,1,-3,3h-204a3,3,0,0,1,-3,-3v-41a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text35" fill="black"><text id="kity_text_451" text-rendering="inherit" font-size="14" dy=".8em" y="594" x="358.5">任务和算子链</text><text id="kity_text_452" text-rendering="inherit" font-size="14" dy=".8em" y="615" x="358.5">(Tasks和Operator Chains)</text></g></g><g id="minder_node3"><g id="node_expander3" style="cursor: pointer;"><path id="kity_path_957" fill="white" stroke="gray" d="M588.5,128.5A6,6,0,1,1,576.5,128.5A6,6,0,1,1,588.5,128.5"></path><path id="kity_path_958" fill="none" stroke="gray" d="M578,128.5L587,128.5"></path></g><path id="node_outline4" fill="none" stroke="none" d="M593.5,117.5h38a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-38a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text4" fill="black"><text id="kity_text_377" text-rendering="inherit" font-size="12" dy=".8em" y="122.5" x="598.5">tasks</text></g></g><g id="minder_node4"><g id="node_expander1" style="cursor: pointer;" display="none"><path id="kity_path_951" fill="white" stroke="gray" d="M676.5,102.5A6,6,0,1,1,664.5,102.5A6,6,0,1,1,676.5,102.5"></path><path id="kity_path_952" fill="none" stroke="gray"></path></g><path id="node_outline2" fill="none" stroke="none" d="M681.5,20.5h299a5,5,0,0,1,5,5v154a5,5,0,0,1,-5,5h-299a5,5,0,0,1,-5,-5v-154a5,5,0,0,1,5,-5z"></path><g id="node_text2" fill="black"><text id="kity_text_373" text-rendering="inherit" font-size="12" dy=".8em" y="167.5" x="686.5">如示例图，包括5个subtasks，也就是说有5个并行线程</text></g><image id="kity_image_771" xlink:href="http://kityminder-img.gz.bcebos.com/9540a83f952b5d5ee272c35059212249c5e11e05" x="730.5" y="25.5" width="200" height="137"></image></g><g id="minder_node5"><g id="node_expander2" display="none" style="cursor: pointer;"><path id="kity_path_954" fill="white" stroke="gray" d="M676.5,225.5A6,6,0,1,1,664.5,225.5A6,6,0,1,1,676.5,225.5"></path><path id="kity_path_955" fill="none" stroke="gray"></path></g><path id="node_outline3" fill="none" stroke="none" d="M681.5,214.5h201a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-201a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text3" fill="black"><text id="kity_text_375" text-rendering="inherit" font-size="12" dy=".8em" y="219.5" x="686.5">每个任务（task）在一个线程中执行</text></g></g><g id="minder_node6"><g id="node_expander6" style="cursor: pointer;"><path id="kity_path_966" fill="white" stroke="gray" d="M588.5,303.5A6,6,0,1,1,576.5,303.5A6,6,0,1,1,588.5,303.5"></path><path id="kity_path_967" fill="none" stroke="gray" d="M578,303.5L587,303.5"></path></g><path id="node_outline7" fill="none" stroke="none" d="M593.5,292.5h57a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-57a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text7" fill="black"><text id="kity_text_383" text-rendering="inherit" font-size="12" dy=".8em" y="297.5" x="598.5">task形成</text></g></g><g id="minder_node7"><g id="node_expander4" display="none" style="cursor: pointer;"><path id="kity_path_960" fill="white" stroke="gray" d="M695.5,277.5A6,6,0,1,1,683.5,277.5A6,6,0,1,1,695.5,277.5"></path><path id="kity_path_961" fill="none" stroke="gray"></path></g><path id="node_outline5" fill="none" stroke="none" d="M700.5,266.5h696a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-696a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text5" fill="black"><text id="kity_text_379" text-rendering="inherit" font-size="12" dy=".8em" y="271.5" x="705.5">在实际的分布式计算环境中，Flink会将多个运算子任务（ operator subtasks）链接一起（chains）形成分布式计算任务（tasks）</text></g></g><g id="minder_node8"><g id="node_expander5" display="none" style="cursor: pointer;"><path id="kity_path_963" fill="white" stroke="gray" d="M695.5,329.5A6,6,0,1,1,683.5,329.5A6,6,0,1,1,695.5,329.5"></path><path id="kity_path_964" fill="none" stroke="gray"></path></g><path id="node_outline6" fill="none" stroke="none" d="M700.5,318.5h573a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-573a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text6" fill="black"><text id="kity_text_381" text-rendering="inherit" font-size="12" dy=".8em" y="323.5" x="705.5">task和subtask关系理解：task可能是一个subtask，也可能是多个operator subtasks chains在一起形成的</text></g></g><g id="minder_node9"><g id="node_expander33" style="cursor: pointer;"><path id="kity_path_1047" fill="white" stroke="gray" d="M588.5,1095.5A6,6,0,1,1,576.5,1095.5A6,6,0,1,1,588.5,1095.5"></path><path id="kity_path_1048" fill="none" stroke="gray" d="M578,1095.5L587,1095.5"></path></g><path id="node_outline34" fill="none" stroke="none" d="M593.5,1084.5h102a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-102a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text34" fill="black"><text id="kity_text_449" text-rendering="inherit" font-size="12" dy=".8em" y="1089.5" x="598.5">operator chains</text></g></g><g id="minder_node10"><g id="node_expander12" style="cursor: pointer;"><path id="kity_path_984" fill="white" stroke="gray" d="M740.5,538.5A6,6,0,1,1,728.5,538.5A6,6,0,1,1,740.5,538.5"></path><path id="kity_path_985" fill="none" stroke="gray" d="M730,538.5L739,538.5"></path></g><path id="node_outline13" fill="none" stroke="none" d="M745.5,527.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text13" fill="black"><text id="kity_text_398" text-rendering="inherit" font-size="12" dy=".8em" y="532.5" x="750.5">优点</text></g></g><g id="minder_node11"><g id="node_expander7" display="none" style="cursor: pointer;"><path id="kity_path_969" fill="white" stroke="gray" d="M824.5,381.5A6,6,0,1,1,812.5,381.5A6,6,0,1,1,824.5,381.5"></path><path id="kity_path_970" fill="none" stroke="gray"></path></g><path id="node_outline8" fill="none" stroke="none" d="M829.5,370.5h118a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-118a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text8" fill="black"><text id="kity_text_385" text-rendering="inherit" font-size="12" dy=".8em" y="375.5" x="834.5">降低了线程间的切换</text></g></g><g id="minder_node12"><g id="node_expander8" display="none" style="cursor: pointer;"><path id="kity_path_972" fill="white" stroke="gray" d="M824.5,433.5A6,6,0,1,1,812.5,433.5A6,6,0,1,1,824.5,433.5"></path><path id="kity_path_973" fill="none" stroke="gray"></path></g><path id="node_outline9" fill="none" stroke="none" d="M829.5,422.5h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text9" fill="black"><text id="kity_text_387" text-rendering="inherit" font-size="12" dy=".8em" y="427.5" x="834.5">减少了数据在与缓冲区的开销</text></g></g><g id="minder_node13"><g id="node_expander10" style="cursor: pointer;"><path id="kity_path_978" fill="white" stroke="gray" d="M824.5,564.5A6,6,0,1,1,812.5,564.5A6,6,0,1,1,824.5,564.5"></path><path id="kity_path_979" fill="none" stroke="gray" d="M814,564.5L823,564.5"></path></g><path id="node_outline11" fill="none" stroke="none" d="M829.5,553.5h159a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-159a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text11" fill="black"><text id="kity_text_394" text-rendering="inherit" font-size="12" dy=".8em" y="558.5" x="834.5">减少消息的序列化/反序列化</text></g></g><g id="minder_node14"><g id="node_expander9" style="cursor: pointer;" display="none"><path id="kity_path_975" fill="white" stroke="gray" d="M1033.5,564.5A6,6,0,1,1,1021.5,564.5A6,6,0,1,1,1033.5,564.5"></path><path id="kity_path_976" fill="none" stroke="gray"></path></g><path id="node_outline10" fill="none" stroke="none" d="M1038.5,474.5h391a5,5,0,0,1,5,5v170a5,5,0,0,1,-5,5h-391a5,5,0,0,1,-5,-5v-170a5,5,0,0,1,5,-5z"></path><g id="node_text10" fill="black"><text id="kity_text_389" text-rendering="inherit" font-size="12" dy=".8em" y="583.5" x="1043.5">框中的虚线是operator chain内部的数据流，</text><text id="kity_text_390" text-rendering="inherit" font-size="12" dy=".8em" y="601.5" x="1043.5">这个流内的数据不会经过序列化/反序列化、网络传输，</text><text id="kity_text_391" text-rendering="inherit" font-size="12" dy=".8em" y="619.5" x="1043.5">而是直接将消息对象传递给下游的 ChainOperator 处理。</text><text id="kity_text_392" text-rendering="inherit" font-size="12" dy=".8em" y="637.5" x="1043.5">上面的OperaotrChain就可以看做是一个入度为1，出度为2的operator</text></g><image id="kity_image_772" xlink:href="http://kityminder-img.gz.bcebos.com/a3f68442b9ba0f363efe387624b951fa0f8b72e0" x="1133.5" y="479.5" width="200" height="99"></image></g><g id="minder_node15"><g id="node_expander11" display="none" style="cursor: pointer;"><path id="kity_path_981" fill="white" stroke="gray" d="M824.5,695.5A6,6,0,1,1,812.5,695.5A6,6,0,1,1,824.5,695.5"></path><path id="kity_path_982" fill="none" stroke="gray"></path></g><path id="node_outline12" fill="none" stroke="none" d="M829.5,684.5h238a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-238a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text12" fill="black"><text id="kity_text_396" text-rendering="inherit" font-size="12" dy=".8em" y="689.5" x="834.5">在降低延时的同时减少了系统的总体吞吐量</text></g></g><g id="minder_node16"><g id="node_expander20" style="cursor: pointer;"><path id="kity_path_1008" fill="white" stroke="gray" d="M740.5,826.5A6,6,0,1,1,728.5,826.5A6,6,0,1,1,740.5,826.5"></path><path id="kity_path_1009" fill="none" stroke="gray" d="M730,826.5L739,826.5"></path></g><path id="node_outline21" fill="none" stroke="none" d="M745.5,815.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text21" fill="black"><text id="kity_text_417" text-rendering="inherit" font-size="12" dy=".8em" y="820.5" x="750.5">操作</text></g></g><g id="minder_node17"><g id="node_expander13" display="none" style="cursor: pointer;"><path id="kity_path_987" fill="white" stroke="gray" d="M824.5,747.5A6,6,0,1,1,812.5,747.5A6,6,0,1,1,824.5,747.5"></path><path id="kity_path_988" fill="none" stroke="gray"></path></g><path id="node_outline14" fill="none" stroke="none" d="M829.5,736.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text14" fill="black"><text id="kity_text_400" text-rendering="inherit" font-size="12" dy=".8em" y="741.5" x="834.5">默认全局开启</text></g></g><g id="minder_node18"><g id="node_expander14" display="none" style="cursor: pointer;"><path id="kity_path_990" fill="white" stroke="gray" d="M824.5,799.5A6,6,0,1,1,812.5,799.5A6,6,0,1,1,824.5,799.5"></path><path id="kity_path_991" fill="none" stroke="gray"></path></g><path id="node_outline15" fill="none" stroke="none" d="M829.5,788.5h400a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-400a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text15" fill="black"><text id="kity_text_402" text-rendering="inherit" font-size="12" dy=".8em" y="793.5" x="834.5">全局关闭：StreamExecutionEnvironment.disableOperatorChaining()</text></g></g><g id="minder_node19"><g id="node_expander19" style="cursor: pointer;"><path id="kity_path_1005" fill="white" stroke="gray" d="M824.5,878.5A6,6,0,1,1,812.5,878.5A6,6,0,1,1,824.5,878.5"></path><path id="kity_path_1006" fill="none" stroke="gray" d="M814,878.5L823,878.5"></path></g><path id="node_outline20" fill="none" stroke="none" d="M829.5,840.5h184a5,5,0,0,1,5,5v66a5,5,0,0,1,-5,5h-184a5,5,0,0,1,-5,-5v-66a5,5,0,0,1,5,-5z"></path><g id="node_text20" fill="black"><text id="kity_text_412" text-rendering="inherit" font-size="12" dy=".8em" y="845.5" x="834.5">单独创建和结束</text><text id="kity_text_413" text-rendering="inherit" font-size="12" dy=".8em" y="863.5" x="834.5">在底层，这两个方法都是</text><text id="kity_text_414" text-rendering="inherit" font-size="12" dy=".8em" y="881.5" x="834.5">通过调整operator的 chain 策略</text><text id="kity_text_415" text-rendering="inherit" font-size="12" dy=".8em" y="899.5" x="834.5">（HEAD、NEVER）来实现的</text></g></g><g id="minder_node20"><g id="node_expander16" style="cursor: pointer;"><path id="kity_path_996" fill="white" stroke="gray" d="M1058.5,852.5A6,6,0,1,1,1046.5,852.5A6,6,0,1,1,1058.5,852.5"></path><path id="kity_path_997" fill="none" stroke="gray" d="M1048,852.5L1057,852.5"></path></g><path id="node_outline17" fill="none" stroke="none" d="M1063.5,841.5h363a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-363a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text17" fill="black"><text id="kity_text_406" text-rendering="inherit" font-size="12" dy=".8em" y="846.5" x="1068.5">创建：someStream.filter(...).map(...).startNewChain().map(...)</text></g></g><g id="minder_node21"><g id="node_expander15" display="none" style="cursor: pointer;"><path id="kity_path_993" fill="white" stroke="gray" d="M1471.5,852.5A6,6,0,1,1,1459.5,852.5A6,6,0,1,1,1471.5,852.5"></path><path id="kity_path_994" fill="none" stroke="gray"></path></g><path id="node_outline16" fill="none" stroke="none" d="M1476.5,841.5h522a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-522a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text16" fill="black"><text id="kity_text_404" text-rendering="inherit" font-size="12" dy=".8em" y="846.5" x="1481.5">startNewChain()来指示从该operator开始一个新的chain（与前面截断，不会被chain到前面）</text></g></g><g id="minder_node22"><g id="node_expander18" style="cursor: pointer;"><path id="kity_path_1002" fill="white" stroke="gray" d="M1058.5,904.5A6,6,0,1,1,1046.5,904.5A6,6,0,1,1,1058.5,904.5"></path><path id="kity_path_1003" fill="none" stroke="gray" d="M1048,904.5L1057,904.5"></path></g><path id="node_outline19" fill="none" stroke="none" d="M1063.5,893.5h308a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-308a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text19" fill="black"><text id="kity_text_410" text-rendering="inherit" font-size="12" dy=".8em" y="898.5" x="1068.5">结束chain：someStream.map(...).disableChaining()</text></g></g><g id="minder_node23"><g id="node_expander17" display="none" style="cursor: pointer;"><path id="kity_path_999" fill="white" stroke="gray" d="M1416.5,904.5A6,6,0,1,1,1404.5,904.5A6,6,0,1,1,1416.5,904.5"></path><path id="kity_path_1000" fill="none" stroke="gray"></path></g><path id="node_outline18" fill="none" stroke="none" d="M1421.5,893.5h531a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-531a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text18" fill="black"><text id="kity_text_408" text-rendering="inherit" font-size="12" dy=".8em" y="898.5" x="1426.5">disableChaining()来指示指示该operator不参与chaining（不会与前后的operator chain一起）</text></g></g><g id="minder_node24"><g id="node_expander31" style="cursor: pointer;"><path id="kity_path_1041" fill="white" stroke="gray" d="M740.5,1243.5A6,6,0,1,1,728.5,1243.5A6,6,0,1,1,740.5,1243.5"></path><path id="kity_path_1042" fill="none" stroke="gray" d="M730,1243.5L739,1243.5"></path></g><path id="node_outline32" fill="none" stroke="none" d="M745.5,1232.5h162a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-162a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text32" fill="black"><text id="kity_text_443" text-rendering="inherit" font-size="12" dy=".8em" y="1237.5" x="750.5">形成operator chains的条件</text></g></g><g id="minder_node25"><g id="node_expander22" style="cursor: pointer;"><path id="kity_path_1014" fill="white" stroke="gray" d="M952.5,1078.5A6,6,0,1,1,940.5,1078.5A6,6,0,1,1,952.5,1078.5"></path><path id="kity_path_1015" fill="none" stroke="gray" d="M942,1078.5L951,1078.5"></path></g><path id="node_outline23" fill="none" stroke="none" d="M957.5,1067.5h150a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-150a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text23" fill="black"><text id="kity_text_425" text-rendering="inherit" font-size="12" dy=".8em" y="1072.5" x="962.5">operator chains过程例子</text></g></g><g id="minder_node26"><g id="node_expander21" style="cursor: pointer;" display="none"><path id="kity_path_1011" fill="white" stroke="gray" d="M1152.5,1079A6,6,0,1,1,1140.5,1079A6,6,0,1,1,1152.5,1079"></path><path id="kity_path_1012" fill="none" stroke="gray"></path></g><path id="node_outline22" fill="none" stroke="none" d="M1157.5,946.5h335a5,5,0,0,1,5,5v255a5,5,0,0,1,-5,5h-335a5,5,0,0,1,-5,-5v-255a5,5,0,0,1,5,-5z"></path><g id="node_text22" fill="black"><text id="kity_text_419" text-rendering="inherit" font-size="12" dy=".8em" y="1122.5" x="1162.5">Source并行度为1，</text><text id="kity_text_420" text-rendering="inherit" font-size="12" dy=".8em" y="1140.5" x="1162.5">FlatMap、KeyAggregation、Sink并行度均为2，</text><text id="kity_text_421" text-rendering="inherit" font-size="12" dy=".8em" y="1158.5" x="1162.5">最终以5个并行的线程来执行的优化过程。</text><text id="kity_text_422" text-rendering="inherit" font-size="12" dy=".8em" y="1176.5" x="1162.5">上图中将KeyAggregation和Sink两个operator进行了合并，</text><text id="kity_text_423" text-rendering="inherit" font-size="12" dy=".8em" y="1194.5" x="1162.5">因为这两个合并后并不会改变整体的拓扑结构</text></g><image id="kity_image_773" xlink:href="http://kityminder-img.gz.bcebos.com/0a52c1154aeda7f00fe4d4ae84974beb9cc6f3bb" x="1224.5" y="951.5" width="200" height="166"></image></g><g id="minder_node27"><g id="node_expander30" style="cursor: pointer;"><path id="kity_path_1038" fill="white" stroke="gray" d="M952.5,1408.5A6,6,0,1,1,940.5,1408.5A6,6,0,1,1,952.5,1408.5"></path><path id="kity_path_1039" fill="none" stroke="gray" d="M942,1408.5L951,1408.5"></path></g><path id="node_outline31" fill="none" stroke="none" d="M957.5,1397.5h334a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-334a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text31" fill="#ff0000"><text id="kity_text_441" text-rendering="inherit" font-size="12" dy=".8em" y="1402.5" x="962.5">并不是任意两个operator就能chain一起的，需要一定的条件 </text></g></g><g id="minder_node28"><g id="node_expander23" display="none" style="cursor: pointer;"><path id="kity_path_1017" fill="white" stroke="gray" d="M1336.5,1252.5A6,6,0,1,1,1324.5,1252.5A6,6,0,1,1,1336.5,1252.5"></path><path id="kity_path_1018" fill="none" stroke="gray"></path></g><path id="node_outline24" fill="none" stroke="none" d="M1341.5,1241.5h145a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-145a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text24" fill="#ff0000"><text id="kity_text_427" text-rendering="inherit" font-size="12" dy=".8em" y="1246.5" x="1346.5">没有禁用Chain-默认开启</text></g></g><g id="minder_node29"><g id="node_expander24" display="none" style="cursor: pointer;"><path id="kity_path_1020" fill="white" stroke="gray" d="M1336.5,1304.5A6,6,0,1,1,1324.5,1304.5A6,6,0,1,1,1336.5,1304.5"></path><path id="kity_path_1021" fill="none" stroke="gray"></path></g><path id="node_outline25" fill="none" stroke="none" d="M1341.5,1293.5h130a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-130a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text25" fill="#ff0000"><text id="kity_text_429" text-rendering="inherit" font-size="12" dy=".8em" y="1298.5" x="1346.5">上下游算子并行度一致</text></g></g><g id="minder_node30"><g id="node_expander25" display="none" style="cursor: pointer;"><path id="kity_path_1023" fill="white" stroke="gray" d="M1336.5,1356.5A6,6,0,1,1,1324.5,1356.5A6,6,0,1,1,1336.5,1356.5"></path><path id="kity_path_1024" fill="none" stroke="gray"></path></g><path id="node_outline26" fill="none" stroke="none" d="M1341.5,1345.5h365a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-365a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text26" fill="#ff0000"><text id="kity_text_431" text-rendering="inherit" font-size="12" dy=".8em" y="1350.5" x="1346.5">下游算子的入度为1（也就是说下游节点没有来自其他节点的输入）</text></g></g><g id="minder_node31"><g id="node_expander26" display="none" style="cursor: pointer;"><path id="kity_path_1026" fill="white" stroke="gray" d="M1336.5,1408.5A6,6,0,1,1,1324.5,1408.5A6,6,0,1,1,1336.5,1408.5"></path><path id="kity_path_1027" fill="none" stroke="gray"></path></g><path id="node_outline27" fill="none" stroke="none" d="M1341.5,1397.5h199a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-199a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text27" fill="#ff0000"><text id="kity_text_433" text-rendering="inherit" font-size="12" dy=".8em" y="1402.5" x="1346.5">上下游算子都在同一个slot group中</text></g></g><g id="minder_node32"><g id="node_expander27" display="none" style="cursor: pointer;"><path id="kity_path_1029" fill="white" stroke="gray" d="M1336.5,1460.5A6,6,0,1,1,1324.5,1460.5A6,6,0,1,1,1336.5,1460.5"></path><path id="kity_path_1030" fill="none" stroke="gray"></path></g><path id="node_outline28" fill="none" stroke="none" d="M1341.5,1449.5h368a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-368a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text28" fill="#ff0000"><text id="kity_text_435" text-rendering="inherit" font-size="12" dy=".8em" y="1454.5" x="1346.5">上下游算子之间没有shuffle（两个算子间数据分区方式是forward）</text></g></g><g id="minder_node33"><g id="node_expander28" display="none" style="cursor: pointer;"><path id="kity_path_1032" fill="white" stroke="gray" d="M1336.5,1512.5A6,6,0,1,1,1324.5,1512.5A6,6,0,1,1,1336.5,1512.5"></path><path id="kity_path_1033" fill="none" stroke="gray"></path></g><path id="node_outline29" fill="none" stroke="none" d="M1341.5,1501.5h513a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-513a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text29" fill="#ff0000"><text id="kity_text_437" text-rendering="inherit" font-size="12" dy=".8em" y="1506.5" x="1346.5">下游的chain策略为ALWAYS（可以与上下游链接，map、flatmap、filter等默认是ALWAYS）</text></g></g><g id="minder_node34"><g id="node_expander29" display="none" style="cursor: pointer;"><path id="kity_path_1035" fill="white" stroke="gray" d="M1336.5,1564.5A6,6,0,1,1,1324.5,1564.5A6,6,0,1,1,1336.5,1564.5"></path><path id="kity_path_1036" fill="none" stroke="gray"></path></g><path id="node_outline30" fill="none" stroke="none" d="M1341.5,1553.5h532a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-532a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text30" fill="#ff0000"><text id="kity_text_439" text-rendering="inherit" font-size="12" dy=".8em" y="1558.5" x="1346.5">上游的chain策略为ALWAYS或HEAD（只能与下游链接，不能与上游链接，Source默认是HEAD）</text></g></g><g id="minder_node35"><g id="node_expander32" display="none" style="cursor: pointer;"><path id="kity_path_1044" fill="white" stroke="gray" d="M740.5,1634.5A6,6,0,1,1,728.5,1634.5A6,6,0,1,1,740.5,1634.5"></path><path id="kity_path_1045" fill="none" stroke="gray"></path></g><path id="node_outline33" fill="none" stroke="none" d="M745.5,1605.5h597a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-597a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text33" fill="black"><text id="kity_text_445" text-rendering="inherit" font-size="12" dy=".8em" y="1610.5" x="750.5">源码及原理思路：Flink内部是通过OperatorChain这个类来将多个operator链在一起形成一个新的operator；</text><text id="kity_text_446" text-rendering="inherit" font-size="12" dy=".8em" y="1628.5" x="750.5">OpeeratorChain是黑盒，对外可见的只有HeadOperator，以及与外部连通的实线输出，</text><text id="kity_text_447" text-rendering="inherit" font-size="12" dy=".8em" y="1646.5" x="750.5">这些输出对应了JobGraph中的JobEdge，在底层通过RecordWriterOutput来实现</text></g></g><g id="minder_node36"><g id="node_expander69" style="cursor: pointer;"><path id="kity_path_1155" fill="white" stroke="gray" d="M337.5,2257.5A6,6,0,1,1,325.5,2257.5A6,6,0,1,1,337.5,2257.5"></path><path id="kity_path_1156" fill="none" stroke="gray" d="M327,2257.5L336,2257.5"></path></g><path id="node_outline70" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M341.5,2244.5h291a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-291a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text70" fill="black"><text id="kity_text_531" text-rendering="inherit" font-size="14" dy=".8em" y="2250.5" x="358.5">Job Managers, Task Managers, Clients</text></g></g><g id="minder_node37"><g id="node_expander41" style="cursor: pointer;"><path id="kity_path_1071" fill="white" stroke="gray" d="M675.5,1792.5A6,6,0,1,1,663.5,1792.5A6,6,0,1,1,675.5,1792.5"></path><path id="kity_path_1072" fill="none" stroke="gray" d="M665,1792.5L674,1792.5"></path></g><path id="node_outline42" fill="none" stroke="none" d="M680.5,1763.5h170a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-170a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text42" fill="black"><text id="kity_text_466" text-rendering="inherit" font-size="12" dy=".8em" y="1768.5" x="685.5">Job Managers</text><text id="kity_text_467" text-rendering="inherit" font-size="12" dy=".8em" y="1786.5" x="685.5">作业管理器（也称为master）</text><text id="kity_text_468" text-rendering="inherit" font-size="12" dy=".8em" y="1804.5" x="685.5">独立的JVM 进程</text></g></g><g id="minder_node38"><g id="node_expander37" style="cursor: pointer;"><path id="kity_path_1059" fill="white" stroke="gray" d="M895.5,1740.5A6,6,0,1,1,883.5,1740.5A6,6,0,1,1,895.5,1740.5"></path><path id="kity_path_1060" fill="none" stroke="gray" d="M885,1740.5L894,1740.5"></path></g><path id="node_outline38" fill="none" stroke="none" d="M900.5,1729.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text38" fill="black"><text id="kity_text_458" text-rendering="inherit" font-size="12" dy=".8em" y="1734.5" x="905.5">功能</text></g></g><g id="minder_node39"><g id="node_expander35" display="none" style="cursor: pointer;"><path id="kity_path_1053" fill="white" stroke="gray" d="M979.5,1714.5A6,6,0,1,1,967.5,1714.5A6,6,0,1,1,979.5,1714.5"></path><path id="kity_path_1054" fill="none" stroke="gray"></path></g><path id="node_outline36" fill="none" stroke="none" d="M984.5,1703.5h579a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-579a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text36" fill="black"><text id="kity_text_454" text-rendering="inherit" font-size="12" dy=".8em" y="1708.5" x="989.5">用于协调程序的分布式执行。它的主要功能是调度job，协调任务（tasks），协调checkpoint，故障恢复等</text></g></g><g id="minder_node40"><g id="node_expander36" display="none" style="cursor: pointer;"><path id="kity_path_1056" fill="white" stroke="gray" d="M979.5,1766.5A6,6,0,1,1,967.5,1766.5A6,6,0,1,1,979.5,1766.5"></path><path id="kity_path_1057" fill="none" stroke="gray"></path></g><path id="node_outline37" fill="none" stroke="none" d="M984.5,1755.5h634a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-634a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text37" fill="black"><text id="kity_text_456" text-rendering="inherit" font-size="12" dy=".8em" y="1760.5" x="989.5">从Client处接收到Job和JAR包等资源后，会生成优化后的执行计划，并以Task的单元调度到各个TaskManager去执行</text></g></g><g id="minder_node41"><g id="node_expander40" style="cursor: pointer;"><path id="kity_path_1068" fill="white" stroke="gray" d="M895.5,1844.5A6,6,0,1,1,883.5,1844.5A6,6,0,1,1,895.5,1844.5"></path><path id="kity_path_1069" fill="none" stroke="gray" d="M885,1844.5L894,1844.5"></path></g><path id="node_outline41" fill="none" stroke="none" d="M900.5,1833.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text41" fill="black"><text id="kity_text_464" text-rendering="inherit" font-size="12" dy=".8em" y="1838.5" x="905.5">数量</text></g></g><g id="minder_node42"><g id="node_expander38" display="none" style="cursor: pointer;"><path id="kity_path_1062" fill="white" stroke="gray" d="M979.5,1818.5A6,6,0,1,1,967.5,1818.5A6,6,0,1,1,979.5,1818.5"></path><path id="kity_path_1063" fill="none" stroke="gray"></path></g><path id="node_outline39" fill="none" stroke="none" d="M984.5,1807.5h230a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-230a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text39" fill="black"><text id="kity_text_460" text-rendering="inherit" font-size="12" dy=".8em" y="1812.5" x="989.5">每个Flink环境中至少一个JobManager；</text></g></g><g id="minder_node43"><g id="node_expander39" display="none" style="cursor: pointer;"><path id="kity_path_1065" fill="white" stroke="gray" d="M979.5,1870.5A6,6,0,1,1,967.5,1870.5A6,6,0,1,1,979.5,1870.5"></path><path id="kity_path_1066" fill="none" stroke="gray"></path></g><path id="node_outline40" fill="none" stroke="none" d="M984.5,1859.5h380a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-380a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text40" fill="black"><text id="kity_text_462" text-rendering="inherit" font-size="12" dy=".8em" y="1864.5" x="989.5">高可用会包含多个JobManagers，其中一个是leader，其他standby</text></g></g><g id="minder_node44"><g id="node_expander48" style="cursor: pointer;"><path id="kity_path_1092" fill="white" stroke="gray" d="M675.5,2040.5A6,6,0,1,1,663.5,2040.5A6,6,0,1,1,675.5,2040.5"></path><path id="kity_path_1093" fill="none" stroke="gray" d="M665,2040.5L674,2040.5"></path></g><path id="node_outline49" fill="none" stroke="none" d="M680.5,2011.5h169a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-169a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text49" fill="black"><text id="kity_text_483" text-rendering="inherit" font-size="12" dy=".8em" y="2016.5" x="685.5">Task Managers</text><text id="kity_text_484" text-rendering="inherit" font-size="12" dy=".8em" y="2034.5" x="685.5">任务管理器（也称为worker）</text><text id="kity_text_485" text-rendering="inherit" font-size="12" dy=".8em" y="2052.5" x="685.5">独立的JVM 进程</text></g></g><g id="minder_node45"><g id="node_expander45" style="cursor: pointer;"><path id="kity_path_1083" fill="white" stroke="gray" d="M894.5,1984.5A6,6,0,1,1,882.5,1984.5A6,6,0,1,1,894.5,1984.5"></path><path id="kity_path_1084" fill="none" stroke="gray" d="M884,1984.5L893,1984.5"></path></g><path id="node_outline46" fill="none" stroke="none" d="M899.5,1973.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text46" fill="black"><text id="kity_text_477" text-rendering="inherit" font-size="12" dy=".8em" y="1978.5" x="904.5">功能</text></g></g><g id="minder_node46"><g id="node_expander42" display="none" style="cursor: pointer;"><path id="kity_path_1074" fill="white" stroke="gray" d="M978.5,1923.5A6,6,0,1,1,966.5,1923.5A6,6,0,1,1,978.5,1923.5"></path><path id="kity_path_1075" fill="none" stroke="gray"></path></g><path id="node_outline43" fill="none" stroke="none" d="M983.5,1912.5h462a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-462a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text43" fill="black"><text id="kity_text_470" text-rendering="inherit" font-size="12" dy=".8em" y="1917.5" x="988.5">用于执行dataflow的tasks（更准确地说，是subtasks），并对数据流进行缓冲、交换</text></g></g><g id="minder_node47"><g id="node_expander43" display="none" style="cursor: pointer;"><path id="kity_path_1077" fill="white" stroke="gray" d="M978.5,1984.5A6,6,0,1,1,966.5,1984.5A6,6,0,1,1,978.5,1984.5"></path><path id="kity_path_1078" fill="none" stroke="gray"></path></g><path id="node_outline44" fill="none" stroke="none" d="M983.5,1964.5h567a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-567a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text44" fill="black"><text id="kity_text_472" text-rendering="inherit" font-size="12" dy=".8em" y="1969.5" x="988.5">在启动的时候就设置好了槽位数（Slot），每个slot能启动一个Task，Task为线程。</text><text id="kity_text_473" text-rendering="inherit" font-size="12" dy=".8em" y="1987.5" x="988.5">从JobManager处接收需要部署的Task，部署启动后，与自己的上游建立 Netty 连接，接收数据并处理。</text></g></g><g id="minder_node48"><g id="node_expander44" display="none" style="cursor: pointer;"><path id="kity_path_1080" fill="white" stroke="gray" d="M978.5,2045.5A6,6,0,1,1,966.5,2045.5A6,6,0,1,1,978.5,2045.5"></path><path id="kity_path_1081" fill="none" stroke="gray"></path></g><path id="node_outline45" fill="none" stroke="none" d="M983.5,2034.5h626a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-626a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text45" fill="black"><text id="kity_text_475" text-rendering="inherit" font-size="12" dy=".8em" y="2039.5" x="988.5">启动之后，TaskManagers会连接到JobManagers来宣布自己可用报告自身的状态，便于JobManagers来分配工作</text></g></g><g id="minder_node49"><g id="node_expander47" style="cursor: pointer;"><path id="kity_path_1089" fill="white" stroke="gray" d="M894.5,2097.5A6,6,0,1,1,882.5,2097.5A6,6,0,1,1,894.5,2097.5"></path><path id="kity_path_1090" fill="none" stroke="gray" d="M884,2097.5L893,2097.5"></path></g><path id="node_outline48" fill="none" stroke="none" d="M899.5,2086.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text48" fill="black"><text id="kity_text_481" text-rendering="inherit" font-size="12" dy=".8em" y="2091.5" x="904.5">数量</text></g></g><g id="minder_node50"><g id="node_expander46" display="none" style="cursor: pointer;"><path id="kity_path_1086" fill="white" stroke="gray" d="M978.5,2097.5A6,6,0,1,1,966.5,2097.5A6,6,0,1,1,978.5,2097.5"></path><path id="kity_path_1087" fill="none" stroke="gray"></path></g><path id="node_outline47" fill="none" stroke="none" d="M983.5,2086.5h249a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-249a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text47" fill="black"><text id="kity_text_479" text-rendering="inherit" font-size="12" dy=".8em" y="2091.5" x="988.5">每个Flink环境中至少包含一个TaskManagers</text></g></g><g id="minder_node51"><g id="node_expander53" style="cursor: pointer;"><path id="kity_path_1107" fill="white" stroke="gray" d="M675.5,2200.5A6,6,0,1,1,663.5,2200.5A6,6,0,1,1,675.5,2200.5"></path><path id="kity_path_1108" fill="none" stroke="gray" d="M665,2200.5L674,2200.5"></path></g><path id="node_outline54" fill="none" stroke="none" d="M680.5,2189.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text54" fill="black"><text id="kity_text_495" text-rendering="inherit" font-size="12" dy=".8em" y="2194.5" x="685.5">集群启动</text></g></g><g id="minder_node52"><g id="node_expander52" style="cursor: pointer;"><path id="kity_path_1104" fill="white" stroke="gray" d="M783.5,2200.5A6,6,0,1,1,771.5,2200.5A6,6,0,1,1,783.5,2200.5"></path><path id="kity_path_1105" fill="none" stroke="gray" d="M773,2200.5L782,2200.5"></path></g><path id="node_outline53" fill="none" stroke="none" d="M788.5,2189.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text53" fill="black"><text id="kity_text_493" text-rendering="inherit" font-size="12" dy=".8em" y="2194.5" x="793.5">启动方式</text></g></g><g id="minder_node53"><g id="node_expander49" display="none" style="cursor: pointer;"><path id="kity_path_1095" fill="white" stroke="gray" d="M891.5,2148.5A6,6,0,1,1,879.5,2148.5A6,6,0,1,1,891.5,2148.5"></path><path id="kity_path_1096" fill="none" stroke="gray"></path></g><path id="node_outline50" fill="none" stroke="none" d="M896.5,2137.5h117a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-117a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text50" fill="black"><text id="kity_text_487" text-rendering="inherit" font-size="12" dy=".8em" y="2142.5" x="901.5">standalone cluster</text></g></g><g id="minder_node54"><g id="node_expander50" display="none" style="cursor: pointer;"><path id="kity_path_1098" fill="white" stroke="gray" d="M891.5,2200.5A6,6,0,1,1,879.5,2200.5A6,6,0,1,1,891.5,2200.5"></path><path id="kity_path_1099" fill="none" stroke="gray"></path></g><path id="node_outline51" fill="none" stroke="none" d="M896.5,2189.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text51" fill="black"><text id="kity_text_489" text-rendering="inherit" font-size="12" dy=".8em" y="2194.5" x="901.5">容器中</text></g></g><g id="minder_node55"><g id="node_expander51" display="none" style="cursor: pointer;"><path id="kity_path_1101" fill="white" stroke="gray" d="M891.5,2252.5A6,6,0,1,1,879.5,2252.5A6,6,0,1,1,891.5,2252.5"></path><path id="kity_path_1102" fill="none" stroke="gray"></path></g><path id="node_outline52" fill="none" stroke="none" d="M896.5,2241.5h318a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-318a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text52" fill="black"><text id="kity_text_491" text-rendering="inherit" font-size="12" dy=".8em" y="2246.5" x="901.5">resource frameworks：YARN或Mesos等资源框架来管理</text></g></g><g id="minder_node56"><g id="node_expander57" style="cursor: pointer;"><path id="kity_path_1119" fill="white" stroke="gray" d="M675.5,2356.5A6,6,0,1,1,663.5,2356.5A6,6,0,1,1,675.5,2356.5"></path><path id="kity_path_1120" fill="none" stroke="gray" d="M665,2356.5L674,2356.5"></path></g><path id="node_outline58" fill="none" stroke="none" d="M680.5,2327.5h127a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-127a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text58" fill="black"><text id="kity_text_503" text-rendering="inherit" font-size="12" dy=".8em" y="2332.5" x="685.5">client</text><text id="kity_text_504" text-rendering="inherit" font-size="12" dy=".8em" y="2350.5" x="685.5">(不是运行时的一部分)</text><text id="kity_text_505" text-rendering="inherit" font-size="12" dy=".8em" y="2368.5" x="685.5">独立的JVM 进程</text></g></g><g id="minder_node57"><g id="node_expander54" display="none" style="cursor: pointer;"><path id="kity_path_1110" fill="white" stroke="gray" d="M852.5,2304.5A6,6,0,1,1,840.5,2304.5A6,6,0,1,1,852.5,2304.5"></path><path id="kity_path_1111" fill="none" stroke="gray"></path></g><path id="node_outline55" fill="none" stroke="none" d="M857.5,2293.5h637a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-637a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text55" fill="black"><text id="kity_text_497" text-rendering="inherit" font-size="12" dy=".8em" y="2298.5" x="862.5">Client其实并不是运行时及程序执行时的一个组成部分，而是被用来准备和发送的数据流(dataflow)给JobManager的</text></g></g><g id="minder_node58"><g id="node_expander55" display="none" style="cursor: pointer;"><path id="kity_path_1113" fill="white" stroke="gray" d="M852.5,2356.5A6,6,0,1,1,840.5,2356.5A6,6,0,1,1,852.5,2356.5"></path><path id="kity_path_1114" fill="none" stroke="gray"></path></g><path id="node_outline56" fill="none" stroke="none" d="M857.5,2345.5h432a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-432a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text56" fill="black"><text id="kity_text_499" text-rendering="inherit" font-size="12" dy=".8em" y="2350.5" x="862.5">提交Job的客户端，可以是运行在任何机器上（与JobManager环境连通即可）</text></g></g><g id="minder_node59"><g id="node_expander56" display="none" style="cursor: pointer;"><path id="kity_path_1116" fill="white" stroke="gray" d="M852.5,2408.5A6,6,0,1,1,840.5,2408.5A6,6,0,1,1,852.5,2408.5"></path><path id="kity_path_1117" fill="none" stroke="gray"></path></g><path id="node_outline57" fill="none" stroke="none" d="M857.5,2397.5h665a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-665a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text57" fill="black"><text id="kity_text_501" text-rendering="inherit" font-size="12" dy=".8em" y="2402.5" x="862.5">在发送完dataflow之后（提交Job后），可以选择断开与JobManager的连接，或继续保持连接以接收程序运行的进度报告</text></g></g><g id="minder_node60"><g id="node_expander68" style="cursor: pointer;"><path id="kity_path_1152" fill="white" stroke="gray" d="M675.5,2740.5A6,6,0,1,1,663.5,2740.5A6,6,0,1,1,675.5,2740.5"></path><path id="kity_path_1153" fill="none" stroke="gray" d="M665,2740.5L674,2740.5"></path></g><path id="node_outline69" fill="none" stroke="none" d="M680.5,2729.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text69" fill="black"><text id="kity_text_529" text-rendering="inherit" font-size="12" dy=".8em" y="2734.5" x="685.5">关系架构图</text></g></g><g id="minder_node61"><g id="node_expander58" style="cursor: pointer;" display="none"><path id="kity_path_1122" fill="white" stroke="gray" d="M795.5,2529A6,6,0,1,1,783.5,2529A6,6,0,1,1,795.5,2529"></path><path id="kity_path_1123" fill="none" stroke="gray"></path></g><path id="node_outline59" fill="none" stroke="none" d="M800.5,2450.5h210a5,5,0,0,1,5,5v147a5,5,0,0,1,-5,5h-210a5,5,0,0,1,-5,-5v-147a5,5,0,0,1,5,-5z"></path><g id="node_text59" fill="black"><text id="kity_text_507" text-rendering="inherit" font-size="12" dy=".8em" y="2590.5" x="904.5"> </text></g><image id="kity_image_774" xlink:href="http://kityminder-img.gz.bcebos.com/dbc5902efc0cda8f48472b58ccb273ac486c1c75" x="805.5" y="2455.5" width="200" height="130"></image></g><g id="minder_node62"><g id="node_expander59" display="none" style="cursor: pointer;"><path id="kity_path_1125" fill="white" stroke="gray" d="M795.5,2648.5A6,6,0,1,1,783.5,2648.5A6,6,0,1,1,795.5,2648.5"></path><path id="kity_path_1126" fill="none" stroke="gray"></path></g><path id="node_outline60" fill="none" stroke="none" d="M800.5,2637.5h604a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-604a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text60" fill="black"><text id="kity_text_509" text-rendering="inherit" font-size="12" dy=".8em" y="2642.5" x="805.5">Flink运行时角色间的通信使用akka（Client，JobManager，TaskManager之间通信），数据的传输使用netty</text></g></g><g id="minder_node63"><g id="node_expander65" style="cursor: pointer;"><path id="kity_path_1143" fill="white" stroke="gray" d="M795.5,2816.5A6,6,0,1,1,783.5,2816.5A6,6,0,1,1,795.5,2816.5"></path><path id="kity_path_1144" fill="none" stroke="gray" d="M785,2816.5L794,2816.5"></path></g><path id="node_outline66" fill="none" stroke="none" d="M800.5,2805.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text66" fill="black"><text id="kity_text_521" text-rendering="inherit" font-size="12" dy=".8em" y="2810.5" x="805.5">过程总结</text></g></g><g id="minder_node64"><g id="node_expander60" display="none" style="cursor: pointer;"><path id="kity_path_1128" fill="white" stroke="gray" d="M903.5,2704.5A6,6,0,1,1,891.5,2704.5A6,6,0,1,1,903.5,2704.5"></path><path id="kity_path_1129" fill="none" stroke="gray"></path></g><path id="node_outline61" fill="none" stroke="none" d="M908.5,2689.5h510a5,5,0,0,1,5,5v20a5,5,0,0,1,-5,5h-510a5,5,0,0,1,-5,-5v-20a5,5,0,0,1,5,-5z"></path><g id="node_text61" fill="black"><text id="kity_text_511" text-rendering="inherit" font-size="12" dy=".8em" y="2698.5" x="938.5">当Flink集群启动后，首先会启动一个（或HA）JobManger和一个或多个的TaskManager</text></g><g id="node_priority1"><path id="kity_path_752" fill="#840023" stroke="none" d="M914,2708c0,3.866,3.134,7,7,7h6c3.866,0,7,-3.134,7,-7V2702H914V2708z"></path><path id="kity_path_753" fill="#FF1200" stroke="none" d="M934,2705c0,3.866,-3.134,7,-7,7H921c-3.866,0,-7,-3.134,-7,-7V2702c0,-3.866,3.134,-7,7,-7h6c3.866,0,7,3.134,7,7V2705z" opacity="0.8"></path><text id="kity_text_754" text-rendering="geometricPrecision" x="923" y="2704.5" text-anchor="middle" font-style="italic" font-size="12" fill="white" dy="4.3203125">1</text></g></g><g id="minder_node65"><g id="node_expander61" display="none" style="cursor: pointer;"><path id="kity_path_1131" fill="white" stroke="gray" d="M903.5,2764.5A6,6,0,1,1,891.5,2764.5A6,6,0,1,1,903.5,2764.5"></path><path id="kity_path_1132" fill="none" stroke="gray"></path></g><path id="node_outline62" fill="none" stroke="none" d="M908.5,2749.5h217a5,5,0,0,1,5,5v20a5,5,0,0,1,-5,5h-217a5,5,0,0,1,-5,-5v-20a5,5,0,0,1,5,-5z"></path><g id="node_text62" fill="black"><text id="kity_text_513" text-rendering="inherit" font-size="12" dy=".8em" y="2758.5" x="938.5">由Client提交任务给JobManager</text></g><g id="node_priority2"><path id="kity_path_757" fill="#01467F" stroke="none" d="M914,2768c0,3.866,3.134,7,7,7h6c3.866,0,7,-3.134,7,-7V2762H914V2768z"></path><path id="kity_path_758" fill="#0074FF" stroke="none" d="M934,2765c0,3.866,-3.134,7,-7,7H921c-3.866,0,-7,-3.134,-7,-7V2762c0,-3.866,3.134,-7,7,-7h6c3.866,0,7,3.134,7,7V2765z" opacity="0.8"></path><text id="kity_text_759" text-rendering="geometricPrecision" x="923" y="2764.5" text-anchor="middle" font-style="italic" font-size="12" fill="white" dy="4.3203125">2</text></g></g><g id="minder_node66"><g id="node_expander62" display="none" style="cursor: pointer;"><path id="kity_path_1134" fill="white" stroke="gray" d="M903.5,2824.5A6,6,0,1,1,891.5,2824.5A6,6,0,1,1,903.5,2824.5"></path><path id="kity_path_1135" fill="none" stroke="gray"></path></g><path id="node_outline63" fill="none" stroke="none" d="M908.5,2809.5h321a5,5,0,0,1,5,5v20a5,5,0,0,1,-5,5h-321a5,5,0,0,1,-5,-5v-20a5,5,0,0,1,5,-5z"></path><g id="node_text63" fill="black"><text id="kity_text_515" text-rendering="inherit" font-size="12" dy=".8em" y="2818.5" x="938.5">JobManager再调度任务到各个TaskManager去执行</text></g><g id="node_priority3"><path id="kity_path_762" fill="#006300" stroke="none" d="M914,2828c0,3.866,3.134,7,7,7h6c3.866,0,7,-3.134,7,-7V2822H914V2828z"></path><path id="kity_path_763" fill="#00AF00" stroke="none" d="M934,2825c0,3.866,-3.134,7,-7,7H921c-3.866,0,-7,-3.134,-7,-7V2822c0,-3.866,3.134,-7,7,-7h6c3.866,0,7,3.134,7,7V2825z" opacity="0.8"></path><text id="kity_text_764" text-rendering="geometricPrecision" x="923" y="2824.5" text-anchor="middle" font-style="italic" font-size="12" fill="white" dy="4.3203125">3</text></g></g><g id="minder_node67"><g id="node_expander63" display="none" style="cursor: pointer;"><path id="kity_path_1137" fill="white" stroke="gray" d="M903.5,2880.5A6,6,0,1,1,891.5,2880.5A6,6,0,1,1,903.5,2880.5"></path><path id="kity_path_1138" fill="none" stroke="gray"></path></g><path id="node_outline64" fill="none" stroke="none" d="M908.5,2869.5h296a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-296a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text64" fill="black"><text id="kity_text_517" text-rendering="inherit" font-size="12" dy=".8em" y="2874.5" x="913.5">TaskManager将心跳和统计信息汇报给JobManager</text></g></g><g id="minder_node68"><g id="node_expander64" display="none" style="cursor: pointer;"><path id="kity_path_1140" fill="white" stroke="gray" d="M903.5,2932.5A6,6,0,1,1,891.5,2932.5A6,6,0,1,1,903.5,2932.5"></path><path id="kity_path_1141" fill="none" stroke="gray"></path></g><path id="node_outline65" fill="none" stroke="none" d="M908.5,2921.5h259a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-259a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text65" fill="black"><text id="kity_text_519" text-rendering="inherit" font-size="12" dy=".8em" y="2926.5" x="913.5">TaskManager 之间以流的形式进行数据的传输</text></g></g><g id="minder_node69"><g id="node_expander67" style="cursor: pointer;"><path id="kity_path_1149" fill="white" stroke="gray" d="M795.5,3002.5A6,6,0,1,1,783.5,3002.5A6,6,0,1,1,795.5,3002.5"></path><path id="kity_path_1150" fill="none" stroke="gray" d="M785,3002.5L794,3002.5"></path></g><path id="node_outline68" fill="none" stroke="none" d="M800.5,2973.5h488a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-488a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text68" fill="black"><text id="kity_text_525" text-rendering="inherit" font-size="12" dy=".8em" y="2978.5" x="830.5">Flink的任务调度是多线程模型，并且不同Job/Task混合在一个TaskManager进程中。</text><text id="kity_text_526" text-rendering="inherit" font-size="12" dy=".8em" y="2996.5" x="830.5">虽然这种方式可以有效提高CPU利用率，资源隔离如何实现？？？</text><text id="kity_text_527" text-rendering="inherit" font-size="12" dy=".8em" y="3014.5" x="830.5">Storm的进程模型，一个JVM中只跑该Job的Tasks实际应用中更为合理？？？？？</text></g><g id="node_progress1"><path id="kity_path_766" fill="#FFED83" stroke="none" d="M825,3003A9,9,0,1,1,807,3003A9,9,0,1,1,825,3003"></path><path id="kity_path_767" fill="#43BC00" stroke="none" d="M816,3003L825,3003A9,9,0,0,1,807,3003A9,9,0,0,1,825,3003L816,3003z"></path><path id="kity_path_768" fill="#8E8E8E" stroke="none" d="M816,2996c4.418,0,8,3.582,8,8h1c0,-5.523,-3.477,-10,-9,-10S807,2998.477,807,3004h1C808,2999.582,811.582,2996,816,2996z"></path><path id="kity_path_770" fill="#EEE" stroke="none" d="M821.812,3000.896l-6.75,6.75l-4.5,-4.5L812.25,3001.459l2.812,2.803l5.062,-5.053L821.812,3000.896z"></path><path id="kity_path_769" fill="url(#kity_linearGradient_17)" stroke="none" d="M816,2993C810.477,2993,806,2997.477,806,3003c0,5.523,4.477,10,10,10s10,-4.477,10,-10C826,2997.477,821.523,2993,816,2993zM816,3011c-4.418,0,-8,-3.582,-8,-8s3.582,-8,8,-8s8,3.582,8,8S820.418,3011,816,3011z"></path></g></g><g id="minder_node70"><g id="node_expander66" display="none" style="cursor: pointer;"><path id="kity_path_1146" fill="white" stroke="gray" d="M1333.5,3002.5A6,6,0,1,1,1321.5,3002.5A6,6,0,1,1,1333.5,3002.5"></path><path id="kity_path_1147" fill="none" stroke="gray"></path></g><path id="node_outline67" fill="none" stroke="none" d="M1338.5,2991.5h138a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-138a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text67" fill="black"><text id="kity_text_523" text-rendering="inherit" font-size="12" dy=".8em" y="2996.5" x="1343.5">解决：task solt、group</text></g></g><g id="minder_node71"><g id="node_expander137" style="cursor: pointer;"><path id="kity_path_1359" fill="white" stroke="gray" d="M337.5,4242.5A6,6,0,1,1,325.5,4242.5A6,6,0,1,1,337.5,4242.5"></path><path id="kity_path_1360" fill="none" stroke="gray" d="M327,4242.5L336,4242.5"></path></g><path id="node_outline138" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M341.5,4229.5h198a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-198a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text138" fill="black"><text id="kity_text_678" text-rendering="inherit" font-size="14" dy=".8em" y="4235.5" x="358.5">Task Slots and Resources</text></g></g><g id="minder_node72"><g id="node_expander91" style="cursor: pointer;"><path id="kity_path_1221" fill="white" stroke="gray" d="M582.5,3314.5A6,6,0,1,1,570.5,3314.5A6,6,0,1,1,582.5,3314.5"></path><path id="kity_path_1222" fill="none" stroke="gray" d="M572,3314.5L581,3314.5"></path></g><path id="node_outline92" fill="none" stroke="none" d="M587.5,3294.5h157a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-157a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text92" fill="black"><text id="kity_text_576" text-rendering="inherit" font-size="12" dy=".8em" y="3299.5" x="592.5">TaskManager和Slot的关系</text><text id="kity_text_577" text-rendering="inherit" font-size="12" dy=".8em" y="3317.5" x="592.5">-资源隔离，控制task数量</text></g></g><g id="minder_node73"><g id="node_expander71" style="cursor: pointer;"><path id="kity_path_1161" fill="white" stroke="gray" d="M789.5,3082.5A6,6,0,1,1,777.5,3082.5A6,6,0,1,1,789.5,3082.5"></path><path id="kity_path_1162" fill="none" stroke="gray" d="M779,3082.5L788,3082.5"></path></g><path id="node_outline72" fill="none" stroke="none" d="M794.5,3071.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text72" fill="black"><text id="kity_text_535" text-rendering="inherit" font-size="12" dy=".8em" y="3076.5" x="799.5">引入原因</text></g></g><g id="minder_node74"><g id="node_expander70" display="none" style="cursor: pointer;"><path id="kity_path_1158" fill="white" stroke="gray" d="M897.5,3082.5A6,6,0,1,1,885.5,3082.5A6,6,0,1,1,897.5,3082.5"></path><path id="kity_path_1159" fill="none" stroke="gray"></path></g><path id="node_outline71" fill="none" stroke="none" d="M902.5,3071.5h717a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-717a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text71" fill="black"><text id="kity_text_533" text-rendering="inherit" font-size="12" dy=".8em" y="3076.5" x="907.5">每个worker都是一个独立的JVM进程，运行一个或多个subtask在其不同的线程中;task slots为了控制worker接收任务（tasks）的数量</text></g></g><g id="minder_node75"><g id="node_expander73" style="cursor: pointer;"><path id="kity_path_1167" fill="white" stroke="gray" d="M789.5,3134.5A6,6,0,1,1,777.5,3134.5A6,6,0,1,1,789.5,3134.5"></path><path id="kity_path_1168" fill="none" stroke="gray" d="M779,3134.5L788,3134.5"></path></g><path id="node_outline74" fill="none" stroke="none" d="M794.5,3123.5h182a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-182a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text74" fill="black"><text id="kity_text_539" text-rendering="inherit" font-size="12" dy=".8em" y="3128.5" x="799.5">taskmanager中最高并发task数</text></g></g><g id="minder_node76"><g id="node_expander72" display="none" style="cursor: pointer;"><path id="kity_path_1164" fill="white" stroke="gray" d="M1021.5,3134.5A6,6,0,1,1,1009.5,3134.5A6,6,0,1,1,1021.5,3134.5"></path><path id="kity_path_1165" fill="none" stroke="gray"></path></g><path id="node_outline73" fill="none" stroke="none" d="M1026.5,3123.5h347a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-347a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text73" fill="black"><text id="kity_text_537" text-rendering="inherit" font-size="12" dy=".8em" y="3128.5" x="1031.5">TaskManager最多能同时并发执行的任务，不能超过slot的数量</text></g></g><g id="minder_node77"><g id="node_expander78" style="cursor: pointer;"><path id="kity_path_1182" fill="white" stroke="gray" d="M789.5,3238.5A6,6,0,1,1,777.5,3238.5A6,6,0,1,1,789.5,3238.5"></path><path id="kity_path_1183" fill="none" stroke="gray" d="M779,3238.5L788,3238.5"></path></g><path id="node_outline79" fill="none" stroke="none" d="M794.5,3227.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text79" fill="black"><text id="kity_text_549" text-rendering="inherit" font-size="12" dy=".8em" y="3232.5" x="799.5">资源隔离</text></g></g><g id="minder_node78"><g id="node_expander74" display="none" style="cursor: pointer;"><path id="kity_path_1170" fill="white" stroke="gray" d="M897.5,3186.5A6,6,0,1,1,885.5,3186.5A6,6,0,1,1,897.5,3186.5"></path><path id="kity_path_1171" fill="none" stroke="gray"></path></g><path id="node_outline75" fill="none" stroke="none" d="M902.5,3175.5h516a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-516a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text75" fill="black"><text id="kity_text_541" text-rendering="inherit" font-size="12" dy=".8em" y="3180.5" x="907.5">每个task slots代表TaskManager中一个特定的资源池子集，槽把TaskManager的资源进行平分</text></g></g><g id="minder_node79"><g id="node_expander75" display="none" style="cursor: pointer;"><path id="kity_path_1173" fill="white" stroke="gray" d="M897.5,3238.5A6,6,0,1,1,885.5,3238.5A6,6,0,1,1,897.5,3238.5"></path><path id="kity_path_1174" fill="none" stroke="gray"></path></g><path id="node_outline76" fill="none" stroke="none" d="M902.5,3227.5h494a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-494a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text76" fill="black"><text id="kity_text_543" text-rendering="inherit" font-size="12" dy=".8em" y="3232.5" x="907.5">将资源池solt化可以让subtask获取指定容量的内存资源，而避免同其他job中的subtask竞争</text></g></g><g id="minder_node80"><g id="node_expander77" style="cursor: pointer;"><path id="kity_path_1179" fill="white" stroke="gray" d="M897.5,3290.5A6,6,0,1,1,885.5,3290.5A6,6,0,1,1,897.5,3290.5"></path><path id="kity_path_1180" fill="none" stroke="gray" d="M887,3290.5L896,3290.5"></path></g><path id="node_outline78" fill="none" stroke="none" d="M902.5,3279.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text78" fill="#ff0000"><text id="kity_text_547" text-rendering="inherit" font-size="12" dy=".8em" y="3284.5" x="907.5">注意：仅内存！</text></g></g><g id="minder_node81"><g id="node_expander76" display="none" style="cursor: pointer;"><path id="kity_path_1176" fill="white" stroke="gray" d="M1041.5,3290.5A6,6,0,1,1,1029.5,3290.5A6,6,0,1,1,1041.5,3290.5"></path><path id="kity_path_1177" fill="none" stroke="gray"></path></g><path id="node_outline77" fill="none" stroke="none" d="M1046.5,3279.5h359a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-359a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text77" fill="black"><text id="kity_text_545" text-rendering="inherit" font-size="12" dy=".8em" y="3284.5" x="1051.5">这里没有对CPU进行隔离；目前task solt仅仅用于隔离tasks的内存</text></g></g><g id="minder_node82"><g id="node_expander90" style="cursor: pointer;"><path id="kity_path_1218" fill="white" stroke="gray" d="M789.5,3547.5A6,6,0,1,1,777.5,3547.5A6,6,0,1,1,789.5,3547.5"></path><path id="kity_path_1219" fill="none" stroke="gray" d="M779,3547.5L788,3547.5"></path></g><path id="node_outline91" fill="none" stroke="none" d="M794.5,3536.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text91" fill="black"><text id="kity_text_574" text-rendering="inherit" font-size="12" dy=".8em" y="3541.5" x="799.5">数量设置</text></g></g><g id="minder_node83"><g id="node_expander79" display="none" style="cursor: pointer;"><path id="kity_path_1185" fill="white" stroke="gray" d="M897.5,3342.5A6,6,0,1,1,885.5,3342.5A6,6,0,1,1,897.5,3342.5"></path><path id="kity_path_1186" fill="none" stroke="gray"></path></g><path id="node_outline80" fill="none" stroke="none" d="M902.5,3331.5h289a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-289a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text80" fill="black"><text id="kity_text_551" text-rendering="inherit" font-size="12" dy=".8em" y="3336.5" x="907.5">每个worker(TaskManager)中至少包含一个task slot</text></g></g><g id="minder_node84"><g id="node_expander88" style="cursor: pointer;"><path id="kity_path_1212" fill="white" stroke="gray" d="M897.5,3484.5A6,6,0,1,1,885.5,3484.5A6,6,0,1,1,897.5,3484.5"></path><path id="kity_path_1213" fill="none" stroke="gray" d="M887,3484.5L896,3484.5"></path></g><path id="node_outline89" fill="none" stroke="none" d="M902.5,3473.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text89" fill="black"><text id="kity_text_570" text-rendering="inherit" font-size="12" dy=".8em" y="3478.5" x="907.5">调整数量</text></g></g><g id="minder_node85"><g id="node_expander81" style="cursor: pointer;"><path id="kity_path_1191" fill="white" stroke="gray" d="M1005.5,3395.5A6,6,0,1,1,993.5,3395.5A6,6,0,1,1,1005.5,3395.5"></path><path id="kity_path_1192" fill="none" stroke="gray" d="M995,3395.5L1004,3395.5"></path></g><path id="node_outline82" fill="none" stroke="none" d="M1010.5,3384.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text82" fill="black"><text id="kity_text_555" text-rendering="inherit" font-size="12" dy=".8em" y="3389.5" x="1015.5">只有一个槽</text></g></g><g id="minder_node86"><g id="node_expander80" display="none" style="cursor: pointer;"><path id="kity_path_1188" fill="white" stroke="gray" d="M1125.5,3395.5A6,6,0,1,1,1113.5,3395.5A6,6,0,1,1,1125.5,3395.5"></path><path id="kity_path_1189" fill="none" stroke="gray"></path></g><path id="node_outline81" fill="none" stroke="none" d="M1130.5,3384.5h240a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-240a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text81" fill="black"><text id="kity_text_553" text-rendering="inherit" font-size="12" dy=".8em" y="3389.5" x="1135.5">每个task group都运行在一个独立的JVM中</text></g></g><g id="minder_node87"><g id="node_expander87" style="cursor: pointer;"><path id="kity_path_1209" fill="white" stroke="gray" d="M1005.5,3574.5A6,6,0,1,1,993.5,3574.5A6,6,0,1,1,1005.5,3574.5"></path><path id="kity_path_1210" fill="none" stroke="gray" d="M995,3574.5L1004,3574.5"></path></g><path id="node_outline88" fill="none" stroke="none" d="M1010.5,3563.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text88" fill="black"><text id="kity_text_568" text-rendering="inherit" font-size="12" dy=".8em" y="3568.5" x="1015.5">多个槽</text></g></g><g id="minder_node88"><g id="node_expander82" display="none" style="cursor: pointer;"><path id="kity_path_1194" fill="white" stroke="gray" d="M1101.5,3447.5A6,6,0,1,1,1089.5,3447.5A6,6,0,1,1,1101.5,3447.5"></path><path id="kity_path_1195" fill="none" stroke="gray"></path></g><path id="node_outline83" fill="none" stroke="none" d="M1106.5,3436.5h412a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-412a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text83" fill="black"><text id="kity_text_557" text-rendering="inherit" font-size="12" dy=".8em" y="3441.5" x="1111.5">TaskManager 有多个槽就意味着会有更多的子任务subtask共享同一个JVM</text></g></g><g id="minder_node89"><g id="node_expander85" style="cursor: pointer;"><path id="kity_path_1203" fill="white" stroke="gray" d="M1101.5,3534.5A6,6,0,1,1,1089.5,3534.5A6,6,0,1,1,1101.5,3534.5"></path><path id="kity_path_1204" fill="none" stroke="gray" d="M1091,3534.5L1100,3534.5"></path></g><path id="node_outline86" fill="none" stroke="none" d="M1106.5,3523.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text86" fill="black"><text id="kity_text_564" text-rendering="inherit" font-size="12" dy=".8em" y="3528.5" x="1111.5">优势</text></g></g><g id="minder_node90"><g id="node_expander83" display="none" style="cursor: pointer;"><path id="kity_path_1197" fill="white" stroke="gray" d="M1185.5,3508.5A6,6,0,1,1,1173.5,3508.5A6,6,0,1,1,1185.5,3508.5"></path><path id="kity_path_1198" fill="none" stroke="gray"></path></g><path id="node_outline84" fill="none" stroke="none" d="M1190.5,3488.5h538a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-538a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text84" fill="black"><text id="kity_text_559" text-rendering="inherit" font-size="12" dy=".8em" y="3493.5" x="1195.5">在同一个JVM中的任务会共享 TCP连接（通过多路复用（multiplexing）的方式）和共享心跳信息，</text><text id="kity_text_560" text-rendering="inherit" font-size="12" dy=".8em" y="3511.5" x="1195.5">可以减少数据的网络传输</text></g></g><g id="minder_node91"><g id="node_expander84" display="none" style="cursor: pointer;"><path id="kity_path_1200" fill="white" stroke="gray" d="M1185.5,3569.5A6,6,0,1,1,1173.5,3569.5A6,6,0,1,1,1185.5,3569.5"></path><path id="kity_path_1201" fill="none" stroke="gray"></path></g><path id="node_outline85" fill="none" stroke="none" d="M1190.5,3558.5h357a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-357a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text85" fill="black"><text id="kity_text_562" text-rendering="inherit" font-size="12" dy=".8em" y="3563.5" x="1195.5">也会共享数据集和数据结构，一定程度上可以降低每个task的开销</text></g></g><g id="minder_node92"><g id="node_expander86" style="cursor: pointer;" display="none"><path id="kity_path_1206" fill="white" stroke="gray" d="M1101.5,3661.5A6,6,0,1,1,1089.5,3661.5A6,6,0,1,1,1101.5,3661.5"></path><path id="kity_path_1207" fill="none" stroke="gray"></path></g><path id="node_outline87" fill="none" stroke="none" d="M1106.5,3610.5h210a5,5,0,0,1,5,5v92a5,5,0,0,1,-5,5h-210a5,5,0,0,1,-5,-5v-92a5,5,0,0,1,5,-5z"></path><g id="node_text87" fill="black"><text id="kity_text_566" text-rendering="inherit" font-size="12" dy=".8em" y="3695.5" x="1155.5">wordcount分布示例</text></g><image id="kity_image_775" xlink:href="http://kityminder-img.gz.bcebos.com/0ca56f8e66cb1373ceeb94f802c0b6ee8bc3f78b" x="1111.5" y="3615.5" width="200" height="75"></image></g><g id="minder_node93"><g id="node_expander89" display="none" style="cursor: pointer;"><path id="kity_path_1215" fill="white" stroke="gray" d="M897.5,3752.5A6,6,0,1,1,885.5,3752.5A6,6,0,1,1,897.5,3752.5"></path><path id="kity_path_1216" fill="none" stroke="gray"></path></g><path id="node_outline90" fill="none" stroke="none" d="M902.5,3741.5h547a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-547a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text90" fill="#ff0000"><text id="kity_text_572" text-rendering="inherit" font-size="12" dy=".8em" y="3746.5" x="907.5">经验上讲Slot的数量与CPU-core的数量一致为好。但考虑到超线程，可以让slotNumber=2*cpuCore</text></g></g><g id="minder_node94"><g id="node_expander121" style="cursor: pointer;"><path id="kity_path_1311" fill="white" stroke="gray" d="M582.5,4262.5A6,6,0,1,1,570.5,4262.5A6,6,0,1,1,582.5,4262.5"></path><path id="kity_path_1312" fill="none" stroke="gray" d="M572,4262.5L581,4262.5"></path></g><path id="node_outline122" fill="none" stroke="none" d="M587.5,4251.5h77a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-77a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text122" fill="black"><text id="kity_text_644" text-rendering="inherit" font-size="12" dy=".8em" y="4256.5" x="592.5">slot共享机制</text></g></g><g id="minder_node95"><g id="node_expander94" style="cursor: pointer;"><path id="kity_path_1230" fill="white" stroke="gray" d="M709.5,3838.5A6,6,0,1,1,697.5,3838.5A6,6,0,1,1,709.5,3838.5"></path><path id="kity_path_1231" fill="none" stroke="gray" d="M699,3838.5L708,3838.5"></path></g><path id="node_outline95" fill="none" stroke="none" d="M714.5,3827.5h89a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-89a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text95" fill="black"><text id="kity_text_584" text-rendering="inherit" font-size="12" dy=".8em" y="3832.5" x="719.5">solt共享的概念</text></g></g><g id="minder_node96"><g id="node_expander92" display="none" style="cursor: pointer;"><path id="kity_path_1224" fill="white" stroke="gray" d="M848.5,3812.5A6,6,0,1,1,836.5,3812.5A6,6,0,1,1,848.5,3812.5"></path><path id="kity_path_1225" fill="none" stroke="gray"></path></g><path id="node_outline93" fill="none" stroke="none" d="M853.5,3792.5h690a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-690a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text93" fill="black"><text id="kity_text_579" text-rendering="inherit" font-size="12" dy=".8em" y="3797.5" x="858.5">默认情况下，Flink允许subtasks共享slot，即Flink会允许同一个作业（job）中来自不同的task的多个subtasks共享一个槽，</text><text id="kity_text_580" text-rendering="inherit" font-size="12" dy=".8em" y="3815.5" x="858.5">即前提是他们来自同一个job，哪怕不同task也可以。这种情况下，可以使得同一个slot运行一个完整的job的流水线（pipleline）</text></g></g><g id="minder_node97"><g id="node_expander93" display="none" style="cursor: pointer;"><path id="kity_path_1227" fill="white" stroke="gray" d="M848.5,3873.5A6,6,0,1,1,836.5,3873.5A6,6,0,1,1,848.5,3873.5"></path><path id="kity_path_1228" fill="none" stroke="gray"></path></g><path id="node_outline94" fill="none" stroke="none" d="M853.5,3862.5h124a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-124a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text94" fill="#ff0000"><text id="kity_text_582" text-rendering="inherit" font-size="12" dy=".8em" y="3867.5" x="858.5">注意前提：同一个job</text></g></g><g id="minder_node98"><g id="node_expander106" style="cursor: pointer;"><path id="kity_path_1266" fill="white" stroke="gray" d="M709.5,4141.5A6,6,0,1,1,697.5,4141.5A6,6,0,1,1,709.5,4141.5"></path><path id="kity_path_1267" fill="none" stroke="gray" d="M699,4141.5L708,4141.5"></path></g><path id="node_outline107" fill="none" stroke="none" d="M714.5,4130.5h113a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-113a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text107" fill="black"><text id="kity_text_614" text-rendering="inherit" font-size="12" dy=".8em" y="4135.5" x="719.5">使用solt共享的优势</text></g></g><g id="minder_node99"><g id="node_expander95" display="none" style="cursor: pointer;"><path id="kity_path_1233" fill="white" stroke="gray" d="M872.5,3935.5A6,6,0,1,1,860.5,3935.5A6,6,0,1,1,872.5,3935.5"></path><path id="kity_path_1234" fill="none" stroke="gray"></path></g><path id="node_outline96" fill="none" stroke="none" d="M877.5,3915.5h720a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-720a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text96" fill="black"><text id="kity_text_586" text-rendering="inherit" font-size="12" dy=".8em" y="3920.5" x="882.5">Flink集群需要与job程序中使用的最高并行度（highest parallelism ）一样多的solt，因此只需计算Job中最高并行度（parallelism），</text><text id="kity_text_587" text-rendering="inherit" font-size="12" dy=".8em" y="3938.5" x="882.5">只要这个满足，其他的job也都能满足，因此不需要去计算一个程序中一共会起多少个task</text></g></g><g id="minder_node100"><g id="node_expander100" style="cursor: pointer;"><path id="kity_path_1248" fill="white" stroke="gray" d="M872.5,4101.5A6,6,0,1,1,860.5,4101.5A6,6,0,1,1,872.5,4101.5"></path><path id="kity_path_1249" fill="none" stroke="gray" d="M862,4101.5L871,4101.5"></path></g><path id="node_outline101" fill="none" stroke="none" d="M877.5,4081.5h281a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-281a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text101" fill="black"><text id="kity_text_600" text-rendering="inherit" font-size="12" dy=".8em" y="4086.5" x="882.5">如果有比较空闲的slot可以将更多的任务分配给它，</text><text id="kity_text_601" text-rendering="inherit" font-size="12" dy=".8em" y="4104.5" x="882.5">可以提高资源利用率。</text></g></g><g id="minder_node101"><g id="node_expander96" display="none" style="cursor: pointer;"><path id="kity_path_1236" fill="white" stroke="gray" d="M1203.5,3996.5A6,6,0,1,1,1191.5,3996.5A6,6,0,1,1,1203.5,3996.5"></path><path id="kity_path_1237" fill="none" stroke="gray"></path></g><path id="node_outline97" fill="none" stroke="none" d="M1208.5,3985.5h288a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-288a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text97" fill="black"><text id="kity_text_589" text-rendering="inherit" font-size="12" dy=".8em" y="3990.5" x="1213.5">非密集型（non-intensive）如source/map()子任务</text></g></g><g id="minder_node102"><g id="node_expander97" display="none" style="cursor: pointer;"><path id="kity_path_1239" fill="white" stroke="gray" d="M1203.5,4048.5A6,6,0,1,1,1191.5,4048.5A6,6,0,1,1,1203.5,4048.5"></path><path id="kity_path_1240" fill="none" stroke="gray"></path></g><path id="node_outline98" fill="none" stroke="none" d="M1208.5,4037.5h214a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-214a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text98" fill="black"><text id="kity_text_591" text-rendering="inherit" font-size="12" dy=".8em" y="4042.5" x="1213.5">密集型（intensive）如window子任务</text></g></g><g id="minder_node103"><g id="node_expander98" display="none" style="cursor: pointer;"><path id="kity_path_1242" fill="white" stroke="gray" d="M1203.5,4109.5A6,6,0,1,1,1191.5,4109.5A6,6,0,1,1,1203.5,4109.5"></path><path id="kity_path_1243" fill="none" stroke="gray"></path></g><path id="node_outline99" fill="none" stroke="none" d="M1208.5,4089.5h450a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-450a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text99" fill="black"><text id="kity_text_593" text-rendering="inherit" font-size="12" dy=".8em" y="4094.5" x="1213.5">若没有任务槽共享，有时候负载不高的Source/Map等subtask将会占据许多资源，</text><text id="kity_text_594" text-rendering="inherit" font-size="12" dy=".8em" y="4112.5" x="1213.5">而负载较高的窗口subtask则会缺乏资源</text></g></g><g id="minder_node104"><g id="node_expander99" display="none" style="cursor: pointer;"><path id="kity_path_1245" fill="white" stroke="gray" d="M1203.5,4188.5A6,6,0,1,1,1191.5,4188.5A6,6,0,1,1,1203.5,4188.5"></path><path id="kity_path_1246" fill="none" stroke="gray"></path></g><path id="node_outline100" fill="none" stroke="none" d="M1208.5,4159.5h523a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-523a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text100" fill="black"><text id="kity_text_596" text-rendering="inherit" font-size="12" dy=".8em" y="4164.5" x="1213.5">如果有任务槽共享机制，通过提高程序的基础并发量，</text><text id="kity_text_597" text-rendering="inherit" font-size="12" dy=".8em" y="4182.5" x="1213.5">就可以让密集型子任务（heavy subtasks）公平的完全分散到任务管理器（TaskManager）中，</text><text id="kity_text_598" text-rendering="inherit" font-size="12" dy=".8em" y="4200.5" x="1213.5">从而可以显著提高槽的资源利用率充分利用资源</text></g></g><g id="minder_node105"><g id="node_expander105" style="cursor: pointer;"><path id="kity_path_1263" fill="white" stroke="gray" d="M872.5,4308A6,6,0,1,1,860.5,4308A6,6,0,1,1,872.5,4308"></path><path id="kity_path_1264" fill="none" stroke="gray" d="M862,4308L871,4308"></path></g><path id="node_outline106" fill="none" stroke="none" d="M877.5,4247.5h297a5,5,0,0,1,5,5v111a5,5,0,0,1,-5,5h-297a5,5,0,0,1,-5,-5v-111a5,5,0,0,1,5,-5z"></path><g id="node_text106" fill="black"><text id="kity_text_612" text-rendering="inherit" font-size="12" dy=".8em" y="4351.5" x="882.5">例子：上述wordcount开启solt共享并且提高并行度后</text></g><image id="kity_image_776" xlink:href="http://kityminder-img.gz.bcebos.com/7c30b5a98c2d68c44b2c6d96c7ab7f2764a1c58e" x="925.5" y="4252.5" width="200" height="94"></image></g><g id="minder_node106"><g id="node_expander101" display="none" style="cursor: pointer;"><path id="kity_path_1251" fill="white" stroke="gray" d="M1219.5,4269.5A6,6,0,1,1,1207.5,4269.5A6,6,0,1,1,1219.5,4269.5"></path><path id="kity_path_1252" fill="none" stroke="gray"></path></g><path id="node_outline102" fill="none" stroke="none" d="M1224.5,4249.5h438a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-438a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text102" fill="black"><text id="kity_text_603" text-rendering="inherit" font-size="12" dy=".8em" y="4254.5" x="1229.5">操作：将WordCount的并行度从之前的2个增加到6个（Source并行度仍为1），</text><text id="kity_text_604" text-rendering="inherit" font-size="12" dy=".8em" y="4272.5" x="1229.5">并开启slot共享（所有operator都在default共享组）</text></g></g><g id="minder_node107"><g id="node_expander104" style="cursor: pointer;"><path id="kity_path_1260" fill="white" stroke="gray" d="M1219.5,4356.5A6,6,0,1,1,1207.5,4356.5A6,6,0,1,1,1219.5,4356.5"></path><path id="kity_path_1261" fill="none" stroke="gray" d="M1209,4356.5L1218,4356.5"></path></g><path id="node_outline105" fill="none" stroke="none" d="M1224.5,4345.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text105" fill="black"><text id="kity_text_610" text-rendering="inherit" font-size="12" dy=".8em" y="4350.5" x="1229.5">优势体现</text></g></g><g id="minder_node108"><g id="node_expander102" display="none" style="cursor: pointer;"><path id="kity_path_1254" fill="white" stroke="gray" d="M1327.5,4330.5A6,6,0,1,1,1315.5,4330.5A6,6,0,1,1,1327.5,4330.5"></path><path id="kity_path_1255" fill="none" stroke="gray"></path></g><path id="node_outline103" fill="none" stroke="none" d="M1332.5,4319.5h544a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-544a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text103" fill="black"><text id="kity_text_606" text-rendering="inherit" font-size="12" dy=".8em" y="4324.5" x="1337.5">首先，我们不用去计算这个job会其多少个task，总之该任务最终会占用6个slots（最高并行度为6）。</text></g></g><g id="minder_node109"><g id="node_expander103" display="none" style="cursor: pointer;"><path id="kity_path_1257" fill="white" stroke="gray" d="M1327.5,4382.5A6,6,0,1,1,1315.5,4382.5A6,6,0,1,1,1327.5,4382.5"></path><path id="kity_path_1258" fill="none" stroke="gray"></path></g><path id="node_outline104" fill="none" stroke="none" d="M1332.5,4371.5h484a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-484a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text104" fill="black"><text id="kity_text_608" text-rendering="inherit" font-size="12" dy=".8em" y="4376.5" x="1337.5">其次，我们可以看到密集型操作keyAggregation/sink被平均地分配到各个TaskManager</text></g></g><g id="minder_node110"><g id="node_expander120" style="cursor: pointer;"><path id="kity_path_1308" fill="white" stroke="gray" d="M709.5,4686.5A6,6,0,1,1,697.5,4686.5A6,6,0,1,1,709.5,4686.5"></path><path id="kity_path_1309" fill="none" stroke="gray" d="M699,4686.5L708,4686.5"></path></g><path id="node_outline121" fill="none" stroke="none" d="M714.5,4675.5h149a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-149a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text121" fill="black"><text id="kity_text_642" text-rendering="inherit" font-size="12" dy=".8em" y="4680.5" x="719.5">实现共享slot以及分配策略</text></g></g><g id="minder_node111"><g id="node_expander117" style="cursor: pointer;"><path id="kity_path_1299" fill="white" stroke="gray" d="M908.5,4576.5A6,6,0,1,1,896.5,4576.5A6,6,0,1,1,908.5,4576.5"></path><path id="kity_path_1300" fill="none" stroke="gray" d="M898,4576.5L907,4576.5"></path></g><path id="node_outline118" fill="none" stroke="none" d="M913.5,4565.5h111a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-111a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text118" fill="black"><text id="kity_text_636" text-rendering="inherit" font-size="12" dy=".8em" y="4570.5" x="918.5">SlotSharingGroup</text></g></g><g id="minder_node112"><g id="node_expander110" style="cursor: pointer;"><path id="kity_path_1278" fill="white" stroke="gray" d="M1069.5,4485.5A6,6,0,1,1,1057.5,4485.5A6,6,0,1,1,1069.5,4485.5"></path><path id="kity_path_1279" fill="none" stroke="gray" d="M1059,4485.5L1068,4485.5"></path></g><path id="node_outline111" fill="none" stroke="none" d="M1074.5,4474.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text111" fill="black"><text id="kity_text_622" text-rendering="inherit" font-size="12" dy=".8em" y="4479.5" x="1079.5">概念</text></g></g><g id="minder_node113"><g id="node_expander107" display="none" style="cursor: pointer;"><path id="kity_path_1269" fill="white" stroke="gray" d="M1153.5,4433.5A6,6,0,1,1,1141.5,4433.5A6,6,0,1,1,1153.5,4433.5"></path><path id="kity_path_1270" fill="none" stroke="gray"></path></g><path id="node_outline108" fill="none" stroke="none" d="M1158.5,4422.5h197a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-197a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text108" fill="black"><text id="kity_text_616" text-rendering="inherit" font-size="12" dy=".8em" y="4427.5" x="1163.5">默认slot sharing group是"default"</text></g></g><g id="minder_node114"><g id="node_expander108" display="none" style="cursor: pointer;"><path id="kity_path_1272" fill="white" stroke="gray" d="M1153.5,4485.5A6,6,0,1,1,1141.5,4485.5A6,6,0,1,1,1153.5,4485.5"></path><path id="kity_path_1273" fill="none" stroke="gray"></path></g><path id="node_outline109" fill="none" stroke="none" d="M1158.5,4474.5h1120a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-1120a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text109" fill="black"><text id="kity_text_618" text-rendering="inherit" font-size="12" dy=".8em" y="4479.5" x="1163.5">Flink中用来实现slot共享的类，它尽可能地让subtasks共享一个slot。Flink将把具有相同slot sharing group的 算子操作（operations）放入同一个插槽，同时保持其他插槽中没用此slot sharing group的算子操作</text></g></g><g id="minder_node115"><g id="node_expander109" display="none" style="cursor: pointer;"><path id="kity_path_1275" fill="white" stroke="gray" d="M1153.5,4537.5A6,6,0,1,1,1141.5,4537.5A6,6,0,1,1,1153.5,4537.5"></path><path id="kity_path_1276" fill="none" stroke="gray"></path></g><path id="node_outline110" fill="none" stroke="none" d="M1158.5,4526.5h701a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-701a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text110" fill="black"><text id="kity_text_620" text-rendering="inherit" font-size="12" dy=".8em" y="4531.5" x="1163.5">手动强制指定slot sharing group：someStream.filter(...).slotSharingGroup("name")，就强制指定了filter的slot共享组为name。</text></g></g><g id="minder_node116"><g id="node_expander116" style="cursor: pointer;"><path id="kity_path_1296" fill="white" stroke="gray" d="M1069.5,4667.5A6,6,0,1,1,1057.5,4667.5A6,6,0,1,1,1069.5,4667.5"></path><path id="kity_path_1297" fill="none" stroke="gray" d="M1059,4667.5L1068,4667.5"></path></g><path id="node_outline117" fill="none" stroke="none" d="M1074.5,4656.5h219a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-219a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text117" fill="#ff0000"><text id="kity_text_634" text-rendering="inherit" font-size="12" dy=".8em" y="4661.5" x="1079.5">怎么确定一个算子的SlotSharingGroup</text></g></g><g id="minder_node117"><g id="node_expander111" display="none" style="cursor: pointer;"><path id="kity_path_1281" fill="white" stroke="gray" d="M1338.5,4589.5A6,6,0,1,1,1326.5,4589.5A6,6,0,1,1,1338.5,4589.5"></path><path id="kity_path_1282" fill="none" stroke="gray"></path></g><path id="node_outline112" fill="none" stroke="none" d="M1343.5,4578.5h701a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-701a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text112" fill="black"><text id="kity_text_624" text-rendering="inherit" font-size="12" dy=".8em" y="4583.5" x="1348.5">默认情况下，所有的operator（算子）都属于默认的共享组default，也就是说默认情况下所有的operator都是可以共享一个slot的</text></g></g><g id="minder_node118"><g id="node_expander114" style="cursor: pointer;"><path id="kity_path_1290" fill="white" stroke="gray" d="M1338.5,4667.5A6,6,0,1,1,1326.5,4667.5A6,6,0,1,1,1338.5,4667.5"></path><path id="kity_path_1291" fill="none" stroke="gray" d="M1328,4667.5L1337,4667.5"></path></g><path id="node_outline115" fill="none" stroke="none" d="M1343.5,4656.5h277a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-277a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text115" fill="#ff0000"><text id="kity_text_630" text-rendering="inherit" font-size="12" dy=".8em" y="4661.5" x="1348.5">根据input的group和自身是否设置group共同确定</text></g></g><g id="minder_node119"><g id="node_expander112" display="none" style="cursor: pointer;"><path id="kity_path_1284" fill="white" stroke="gray" d="M1665.5,4641.5A6,6,0,1,1,1653.5,4641.5A6,6,0,1,1,1665.5,4641.5"></path><path id="kity_path_1285" fill="none" stroke="gray"></path></g><path id="node_outline113" fill="none" stroke="none" d="M1670.5,4630.5h432a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-432a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text113" fill="black"><text id="kity_text_626" text-rendering="inherit" font-size="12" dy=".8em" y="4635.5" x="1675.5">当所有input operators具有相同的slot共享组时，该operator会继承这个共享组</text></g></g><g id="minder_node120"><g id="node_expander113" display="none" style="cursor: pointer;"><path id="kity_path_1287" fill="white" stroke="gray" d="M1665.5,4693.5A6,6,0,1,1,1653.5,4693.5A6,6,0,1,1,1665.5,4693.5"></path><path id="kity_path_1288" fill="none" stroke="gray"></path></g><path id="node_outline114" fill="none" stroke="none" d="M1670.5,4682.5h341a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-341a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text114" fill="black"><text id="kity_text_628" text-rendering="inherit" font-size="12" dy=".8em" y="4687.5" x="1675.5">判断是否写代码强制指定：**.slotSharingGroup(“group1”)</text></g></g><g id="minder_node121"><g id="node_expander115" display="none" style="cursor: pointer;"><path id="kity_path_1293" fill="white" stroke="gray" d="M1338.5,4745.5A6,6,0,1,1,1326.5,4745.5A6,6,0,1,1,1338.5,4745.5"></path><path id="kity_path_1294" fill="none" stroke="gray"></path></g><path id="node_outline116" fill="none" stroke="none" d="M1343.5,4734.5h425a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-425a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text116" fill="black"><text id="kity_text_632" text-rendering="inherit" font-size="12" dy=".8em" y="4739.5" x="1348.5">好处：适当的设置可以减少每个slot运行的线程数，从而整体上减少机器的负载</text></g></g><g id="minder_node122"><g id="node_expander119" style="cursor: pointer;"><path id="kity_path_1305" fill="white" stroke="gray" d="M908.5,4797.5A6,6,0,1,1,896.5,4797.5A6,6,0,1,1,908.5,4797.5"></path><path id="kity_path_1306" fill="none" stroke="gray" d="M898,4797.5L907,4797.5"></path></g><path id="node_outline120" fill="none" stroke="none" d="M913.5,4786.5h116a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-116a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text120" fill="black"><text id="kity_text_640" text-rendering="inherit" font-size="12" dy=".8em" y="4791.5" x="918.5">CoLocationGroup</text></g></g><g id="minder_node123"><g id="node_expander118" display="none" style="cursor: pointer;"><path id="kity_path_1302" fill="white" stroke="gray" d="M1074.5,4797.5A6,6,0,1,1,1062.5,4797.5A6,6,0,1,1,1074.5,4797.5"></path><path id="kity_path_1303" fill="none" stroke="gray"></path></g><path id="node_outline119" fill="none" stroke="none" d="M1079.5,4786.5h834a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-834a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text119" fill="black"><text id="kity_text_638" text-rendering="inherit" font-size="12" dy=".8em" y="4791.5" x="1084.5">用来强制将subtasks放到同一个slot中。CoLocationGroup主要用于迭代流中，用来保证迭代头与迭代尾的第i个subtask能被调度到同一个TaskManager上</text></g></g><g id="minder_node124"><g id="node_expander125" style="cursor: pointer;"><path id="kity_path_1323" fill="white" stroke="gray" d="M582.5,4890.5A6,6,0,1,1,570.5,4890.5A6,6,0,1,1,582.5,4890.5"></path><path id="kity_path_1324" fill="none" stroke="gray" d="M572,4890.5L581,4890.5"></path></g><path id="node_outline126" fill="none" stroke="none" d="M587.5,4879.5h149a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-149a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text126" fill="#ff0000"><text id="kity_text_652" text-rendering="inherit" font-size="12" dy=".8em" y="4884.5" x="592.5">一个应用需要多少个slot？</text></g></g><g id="minder_node125"><g id="node_expander122" display="none" style="cursor: pointer;"><path id="kity_path_1314" fill="white" stroke="gray" d="M781.5,4849.5A6,6,0,1,1,769.5,4849.5A6,6,0,1,1,781.5,4849.5"></path><path id="kity_path_1315" fill="none" stroke="gray"></path></g><path id="node_outline123" fill="none" stroke="none" d="M786.5,4838.5h303a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-303a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text123" fill="black"><text id="kity_text_646" text-rendering="inherit" font-size="12" dy=".8em" y="4843.5" x="791.5">不设置SlotSharingGroup的情况下：应用的最大并行度</text></g></g><g id="minder_node126"><g id="node_expander124" style="cursor: pointer;"><path id="kity_path_1320" fill="white" stroke="gray" d="M781.5,4931.5A6,6,0,1,1,769.5,4931.5A6,6,0,1,1,781.5,4931.5"></path><path id="kity_path_1321" fill="none" stroke="gray" d="M771,4931.5L780,4931.5"></path></g><path id="node_outline125" fill="none" stroke="none" d="M786.5,4920.5h379a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-379a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text125" fill="black"><text id="kity_text_650" text-rendering="inherit" font-size="12" dy=".8em" y="4925.5" x="791.5">设置了SlotSharingGroup：所有SlotSharingGroup中最大并行度之和</text></g></g><g id="minder_node127"><g id="node_expander123" style="cursor: pointer;" display="none"><path id="kity_path_1317" fill="white" stroke="gray" d="M1210.5,4932A6,6,0,1,1,1198.5,4932A6,6,0,1,1,1210.5,4932"></path><path id="kity_path_1318" fill="none" stroke="gray"></path></g><path id="node_outline124" fill="none" stroke="none" d="M1215.5,4890.5h552a5,5,0,0,1,5,5v73a5,5,0,0,1,-5,5h-552a5,5,0,0,1,-5,-5v-73a5,5,0,0,1,5,-5z"></path><g id="node_text124" fill="black"><text id="kity_text_648" text-rendering="inherit" font-size="12" dy=".8em" y="4956.5" x="1220.5">如下图：source时为default，然后在map算子处设置gourp为test，那么这个需要的槽数是10+20=30</text></g><image id="kity_image_777" xlink:href="http://kityminder-img.gz.bcebos.com/e80e97795bcd0c19a8f78ab9f33605d44e917eb5" x="1391.5" y="4895.5" width="200" height="56"></image></g><g id="minder_node128"><g id="node_expander136" style="cursor: pointer;"><path id="kity_path_1356" fill="white" stroke="gray" d="M582.5,5161.5A6,6,0,1,1,570.5,5161.5A6,6,0,1,1,582.5,5161.5"></path><path id="kity_path_1357" fill="none" stroke="gray" d="M572,5161.5L581,5161.5"></path></g><path id="node_outline137" fill="none" stroke="none" d="M587.5,5132.5h113a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-113a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text137" fill="black"><text id="kity_text_674" text-rendering="inherit" font-size="12" dy=".8em" y="5137.5" x="592.5">solt和并行度的关系</text><text id="kity_text_675" text-rendering="inherit" font-size="12" dy=".8em" y="5155.5" x="592.5">-任务调度</text><text id="kity_text_676" text-rendering="inherit" font-size="12" dy=".8em" y="5173.5" x="592.5">-pipeline</text></g></g><g id="minder_node129"><g id="node_expander127" style="cursor: pointer;"><path id="kity_path_1329" fill="white" stroke="gray" d="M745.5,5014.5A6,6,0,1,1,733.5,5014.5A6,6,0,1,1,745.5,5014.5"></path><path id="kity_path_1330" fill="none" stroke="gray" d="M735,5014.5L744,5014.5"></path></g><path id="node_outline128" fill="none" stroke="none" d="M750.5,5003.5h1060a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-1060a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text128" fill="black"><text id="kity_text_656" text-rendering="inherit" font-size="12" dy=".8em" y="5008.5" x="755.5">Flink通过任务槽（Task Slot）定义执行资源，每个TaskManager都有一或多个任务槽，每个任务槽都可以运行一个并行任务流(one pipeline of parallel tasks)，一个流(pipeline)包括多个连续的任务</text></g></g><g id="minder_node130"><g id="node_expander126" display="none" style="cursor: pointer;"><path id="kity_path_1326" fill="white" stroke="gray" d="M1855.5,5014.5A6,6,0,1,1,1843.5,5014.5A6,6,0,1,1,1855.5,5014.5"></path><path id="kity_path_1327" fill="none" stroke="gray"></path></g><path id="node_outline127" fill="none" stroke="none" d="M1860.5,5003.5h89a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-89a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text127" fill="black"><text id="kity_text_654" text-rendering="inherit" font-size="12" dy=".8em" y="5008.5" x="1865.5">solt共享可调整</text></g></g><g id="minder_node131"><g id="node_expander130" style="cursor: pointer;"><path id="kity_path_1338" fill="white" stroke="gray" d="M745.5,5092.5A6,6,0,1,1,733.5,5092.5A6,6,0,1,1,745.5,5092.5"></path><path id="kity_path_1339" fill="none" stroke="gray" d="M735,5092.5L744,5092.5"></path></g><path id="node_outline131" fill="none" stroke="none" d="M750.5,5081.5h190a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-190a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text131" fill="black"><text id="kity_text_662" text-rendering="inherit" font-size="12" dy=".8em" y="5086.5" x="755.5">Flink通常会并行的执行连续的任务</text></g></g><g id="minder_node132"><g id="node_expander128" display="none" style="cursor: pointer;"><path id="kity_path_1332" fill="white" stroke="gray" d="M985.5,5066.5A6,6,0,1,1,973.5,5066.5A6,6,0,1,1,985.5,5066.5"></path><path id="kity_path_1333" fill="none" stroke="gray"></path></g><path id="node_outline129" fill="none" stroke="none" d="M990.5,5055.5h261a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-261a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text129" fill="black"><text id="kity_text_658" text-rendering="inherit" font-size="12" dy=".8em" y="5060.5" x="995.5">对于Streaming程序来说，任何情况都如此执行</text></g></g><g id="minder_node133"><g id="node_expander129" display="none" style="cursor: pointer;"><path id="kity_path_1335" fill="white" stroke="gray" d="M985.5,5118.5A6,6,0,1,1,973.5,5118.5A6,6,0,1,1,985.5,5118.5"></path><path id="kity_path_1336" fill="none" stroke="gray"></path></g><path id="node_outline130" fill="none" stroke="none" d="M990.5,5107.5h217a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-217a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text130" fill="black"><text id="kity_text_660" text-rendering="inherit" font-size="12" dy=".8em" y="5112.5" x="995.5">对于batch 程序，多数情况也如此执行</text></g></g><g id="minder_node134"><g id="node_expander135" style="cursor: pointer;"><path id="kity_path_1353" fill="white" stroke="gray" d="M745.5,5248.5A6,6,0,1,1,733.5,5248.5A6,6,0,1,1,745.5,5248.5"></path><path id="kity_path_1354" fill="none" stroke="gray" d="M735,5248.5L744,5248.5"></path></g><path id="node_outline136" fill="none" stroke="none" d="M750.5,5176.5h210a5,5,0,0,1,5,5v134a5,5,0,0,1,-5,5h-210a5,5,0,0,1,-5,-5v-134a5,5,0,0,1,5,-5z"></path><g id="node_text136" fill="black"><text id="kity_text_672" text-rendering="inherit" font-size="12" dy=".8em" y="5303.5" x="810.5">Scheduling示例</text></g><image id="kity_image_778" xlink:href="http://kityminder-img.gz.bcebos.com/1daf3895c06469f8dd23356564c3879d64eacafc" x="755.5" y="5181.5" width="200" height="117"></image></g><g id="minder_node135"><g id="node_expander131" display="none" style="cursor: pointer;"><path id="kity_path_1341" fill="white" stroke="gray" d="M1005.5,5170.5A6,6,0,1,1,993.5,5170.5A6,6,0,1,1,1005.5,5170.5"></path><path id="kity_path_1342" fill="none" stroke="gray"></path></g><path id="node_outline132" fill="none" stroke="none" d="M1010.5,5159.5h419a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-419a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text132" fill="black"><text id="kity_text_664" text-rendering="inherit" font-size="12" dy=".8em" y="5164.5" x="1015.5">在具有2个TaskManager，每个TaskManager都有3个Task Slot的集群上运行</text></g></g><g id="minder_node136"><g id="node_expander132" display="none" style="cursor: pointer;"><path id="kity_path_1344" fill="white" stroke="gray" d="M1005.5,5222.5A6,6,0,1,1,993.5,5222.5A6,6,0,1,1,1005.5,5222.5"></path><path id="kity_path_1345" fill="none" stroke="gray"></path></g><path id="node_outline133" fill="none" stroke="none" d="M1010.5,5211.5h422a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-422a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text133" fill="black"><text id="kity_text_666" text-rendering="inherit" font-size="12" dy=".8em" y="5216.5" x="1015.5">由一个data source、一个MapFunction和一个ReduceFunction组成的程序</text></g></g><g id="minder_node137"><g id="node_expander133" display="none" style="cursor: pointer;"><path id="kity_path_1347" fill="white" stroke="gray" d="M1005.5,5274.5A6,6,0,1,1,993.5,5274.5A6,6,0,1,1,1005.5,5274.5"></path><path id="kity_path_1348" fill="none" stroke="gray"></path></g><path id="node_outline134" fill="none" stroke="none" d="M1010.5,5263.5h435a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-435a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text134" fill="black"><text id="kity_text_668" text-rendering="inherit" font-size="12" dy=".8em" y="5268.5" x="1015.5">data source和MapFunction的并发度都为4，而ReduceFunction的并发度为3</text></g></g><g id="minder_node138"><g id="node_expander134" display="none" style="cursor: pointer;"><path id="kity_path_1350" fill="white" stroke="gray" d="M1005.5,5326.5A6,6,0,1,1,993.5,5326.5A6,6,0,1,1,1005.5,5326.5"></path><path id="kity_path_1351" fill="none" stroke="gray"></path></g><path id="node_outline135" fill="none" stroke="none" d="M1010.5,5315.5h870a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-870a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text135" fill="black"><text id="kity_text_670" text-rendering="inherit" font-size="12" dy=".8em" y="5320.5" x="1015.5">一个数据流由Source-Map-Reduce的顺序组成，一个MapFunction的第n个并行实例与一个ReduceFunction的第n个并行实例的连续任务可以组成一个pipeline</text></g></g><g id="minder_node139"><g id="node_expander171" style="cursor: pointer;"><path id="kity_path_1461" fill="white" stroke="gray" d="M337.5,6328.5A6,6,0,1,1,325.5,6328.5A6,6,0,1,1,337.5,6328.5"></path><path id="kity_path_1462" fill="none" stroke="gray" d="M327,6328.5L336,6328.5"></path></g><path id="node_outline172" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M341.5,6315.5h139a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-139a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text172" fill="black"><text id="kity_text_749" text-rendering="inherit" font-size="14" dy=".8em" y="6321.5" x="358.5">State Backends</text></g></g><g id="minder_node140"><g id="node_expander142" style="cursor: pointer;"><path id="kity_path_1374" fill="white" stroke="gray" d="M523.5,5466.5A6,6,0,1,1,511.5,5466.5A6,6,0,1,1,523.5,5466.5"></path><path id="kity_path_1375" fill="none" stroke="gray" d="M513,5466.5L522,5466.5"></path></g><path id="node_outline143" fill="none" stroke="none" d="M528.5,5455.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text143" fill="black"><text id="kity_text_688" text-rendering="inherit" font-size="12" dy=".8em" y="5460.5" x="533.5">概念</text></g></g><g id="minder_node141"><g id="node_expander138" display="none" style="cursor: pointer;"><path id="kity_path_1362" fill="white" stroke="gray" d="M607.5,5388.5A6,6,0,1,1,595.5,5388.5A6,6,0,1,1,607.5,5388.5"></path><path id="kity_path_1363" fill="none" stroke="gray"></path></g><path id="node_outline139" fill="none" stroke="none" d="M612.5,5377.5h1074a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-1074a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text139" fill="#548dd4"><text id="kity_text_680" text-rendering="inherit" font-size="12" dy=".8em" y="5382.5" x="617.5">当检查点（checkpoint）机制启动时，状态将在检查点中持久化来应对数据丢失以及恢复。而状态在内部是如何表示的、状态是如何持久化到检查点中以及持久化到哪里都取决于选定的State Backend</text></g></g><g id="minder_node142"><g id="node_expander139" display="none" style="cursor: pointer;"><path id="kity_path_1365" fill="white" stroke="gray" d="M607.5,5440.5A6,6,0,1,1,595.5,5440.5A6,6,0,1,1,607.5,5440.5"></path><path id="kity_path_1366" fill="none" stroke="gray"></path></g><path id="node_outline140" fill="none" stroke="none" d="M612.5,5429.5h376a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-376a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text140" fill="black"><text id="kity_text_682" text-rendering="inherit" font-size="12" dy=".8em" y="5434.5" x="617.5">Flink提供了不同的state backend，用于指定state的存储方式和位置</text></g></g><g id="minder_node143"><g id="node_expander140" display="none" style="cursor: pointer;"><path id="kity_path_1368" fill="white" stroke="gray" d="M607.5,5492.5A6,6,0,1,1,595.5,5492.5A6,6,0,1,1,607.5,5492.5"></path><path id="kity_path_1369" fill="none" stroke="gray"></path></g><path id="node_outline141" fill="none" stroke="none" d="M612.5,5481.5h329a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-329a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text141" fill="black"><text id="kity_text_684" text-rendering="inherit" font-size="12" dy=".8em" y="5486.5" x="617.5">存储键/值索引的确切数据结构取决于所选的State Backend</text></g></g><g id="minder_node144"><g id="node_expander141" display="none" style="cursor: pointer;"><path id="kity_path_1371" fill="white" stroke="gray" d="M607.5,5544.5A6,6,0,1,1,595.5,5544.5A6,6,0,1,1,607.5,5544.5"></path><path id="kity_path_1372" fill="none" stroke="gray"></path></g><path id="node_outline142" fill="none" stroke="none" d="M612.5,5533.5h1199a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-1199a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text142" fill="black"><text id="kity_text_686" text-rendering="inherit" font-size="12" dy=".8em" y="5538.5" x="617.5">有的后端存储将数据保存在内存中的哈希表中，而有的存储会使用RocksDB来保存键值对。除了定义保存状态的数据结构之外，后端存储还实现了获取键值对的特定时间点快照的功能，该功能可以将快照保存为检查点的一部分</text></g></g><g id="minder_node145"><g id="node_expander163" style="cursor: pointer;"><path id="kity_path_1437" fill="white" stroke="gray" d="M523.5,6315.5A6,6,0,1,1,511.5,6315.5A6,6,0,1,1,523.5,6315.5"></path><path id="kity_path_1438" fill="none" stroke="gray" d="M513,6315.5L522,6315.5"></path></g><path id="node_outline164" fill="none" stroke="none" d="M528.5,6304.5h190a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-190a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text164" fill="black"><text id="kity_text_732" text-rendering="inherit" font-size="12" dy=".8em" y="6309.5" x="533.5">种类（后续有时间详细扩展描述）</text></g></g><g id="minder_node146"><g id="node_expander155" style="cursor: pointer;"><path id="kity_path_1413" fill="white" stroke="gray" d="M763.5,5853.5A6,6,0,1,1,751.5,5853.5A6,6,0,1,1,763.5,5853.5"></path><path id="kity_path_1414" fill="none" stroke="gray" d="M753,5853.5L762,5853.5"></path></g><path id="node_outline156" fill="none" stroke="none" d="M768.5,5824.5h188a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-188a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text156" fill="black"><text id="kity_text_716" text-rendering="inherit" font-size="12" dy=".8em" y="5829.5" x="773.5">MemoryStateBackend（默认）</text><text id="kity_text_1677" text-rendering="inherit" font-size="12" dy=".8em" y="5847.5" x="773.5"></text><text id="kity_text_1678" text-rendering="inherit" font-size="12" dy=".8em" y="5865.5" x="773.5">-较小</text></g></g><g id="minder_node147"><g id="node_expander147" style="cursor: pointer;"><path id="kity_path_1389" fill="white" stroke="gray" d="M1001.5,5684.5A6,6,0,1,1,989.5,5684.5A6,6,0,1,1,1001.5,5684.5"></path><path id="kity_path_1390" fill="none" stroke="gray" d="M991,5684.5L1000,5684.5"></path></g><path id="node_outline148" fill="none" stroke="none" d="M1006.5,5673.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text148" fill="black"><text id="kity_text_699" text-rendering="inherit" font-size="12" dy=".8em" y="5678.5" x="1011.5">描述</text></g></g><g id="minder_node148"><g id="node_expander143" display="none" style="cursor: pointer;"><path id="kity_path_1377" fill="white" stroke="gray" d="M1085.5,5597.5A6,6,0,1,1,1073.5,5597.5A6,6,0,1,1,1085.5,5597.5"></path><path id="kity_path_1378" fill="none" stroke="gray"></path></g><path id="node_outline144" fill="none" stroke="none" d="M1090.5,5586.5h263a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-263a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text144" fill="black"><text id="kity_text_690" text-rendering="inherit" font-size="12" dy=".8em" y="5591.5" x="1095.5">内部状态backend ，用于维护Java堆上的状态</text></g></g><g id="minder_node149"><g id="node_expander144" display="none" style="cursor: pointer;"><path id="kity_path_1380" fill="white" stroke="gray" d="M1085.5,5649.5A6,6,0,1,1,1073.5,5649.5A6,6,0,1,1,1085.5,5649.5"></path><path id="kity_path_1381" fill="none" stroke="gray"></path></g><path id="node_outline145" fill="none" stroke="none" d="M1090.5,5638.5h361a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-361a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text145" fill="black"><text id="kity_text_692" text-rendering="inherit" font-size="12" dy=".8em" y="5643.5" x="1095.5">&#xa0;Key/value 状态和window算子包含存储值和计时器等的的哈希表</text></g></g><g id="minder_node150"><g id="node_expander145" display="none" style="cursor: pointer;"><path id="kity_path_1383" fill="white" stroke="gray" d="M1085.5,5701.5A6,6,0,1,1,1073.5,5701.5A6,6,0,1,1,1085.5,5701.5"></path><path id="kity_path_1384" fill="none" stroke="gray"></path></g><path id="node_outline146" fill="none" stroke="none" d="M1090.5,5690.5h829a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-829a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text146" fill="black"><text id="kity_text_694" text-rendering="inherit" font-size="12" dy=".8em" y="5695.5" x="1095.5">在检查点时，此state backend将对state进行SNAPSHOT，并将其作为检查点确认消息的一部分发送到JobManager，JobManager也将其存储在其堆上</text></g></g><g id="minder_node151"><g id="node_expander146" display="none" style="cursor: pointer;"><path id="kity_path_1386" fill="white" stroke="gray" d="M1085.5,5762.5A6,6,0,1,1,1073.5,5762.5A6,6,0,1,1,1085.5,5762.5"></path><path id="kity_path_1387" fill="none" stroke="gray"></path></g><path id="node_outline147" fill="none" stroke="none" d="M1090.5,5742.5h647a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-647a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text147" fill="black"><text id="kity_text_696" text-rendering="inherit" font-size="12" dy=".8em" y="5747.5" x="1095.5">默认情况下，MemoryStateBackend配置为支持异步快照。 异步快照可避免可能导致流应用程序背压的潜在阻塞管道。</text><text id="kity_text_697" text-rendering="inherit" font-size="12" dy=".8em" y="5765.5" x="1095.5">（调试时可以关闭new MemoryStateBackend(MAX_MEM_STATE_SIZE, false);）</text></g></g><g id="minder_node152"><g id="node_expander151" style="cursor: pointer;"><path id="kity_path_1401" fill="white" stroke="gray" d="M1001.5,5884.5A6,6,0,1,1,989.5,5884.5A6,6,0,1,1,1001.5,5884.5"></path><path id="kity_path_1402" fill="none" stroke="gray" d="M991,5884.5L1000,5884.5"></path></g><path id="node_outline152" fill="none" stroke="none" d="M1006.5,5873.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text152" fill="black"><text id="kity_text_708" text-rendering="inherit" font-size="12" dy=".8em" y="5878.5" x="1011.5">局限性</text></g></g><g id="minder_node153"><g id="node_expander148" display="none" style="cursor: pointer;"><path id="kity_path_1392" fill="white" stroke="gray" d="M1097.5,5832.5A6,6,0,1,1,1085.5,5832.5A6,6,0,1,1,1097.5,5832.5"></path><path id="kity_path_1393" fill="none" stroke="gray"></path></g><path id="node_outline149" fill="none" stroke="none" d="M1102.5,5812.5h308a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-308a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text149" fill="black"><text id="kity_text_701" text-rendering="inherit" font-size="12" dy=".8em" y="5817.5" x="1107.5">默认情况下，每个状态的大小限制为5 MB。</text><text id="kity_text_702" text-rendering="inherit" font-size="12" dy=".8em" y="5835.5" x="1107.5">可以在MemoryStateBackend的构造函数中增加此值。</text></g></g><g id="minder_node154"><g id="node_expander149" display="none" style="cursor: pointer;"><path id="kity_path_1395" fill="white" stroke="gray" d="M1097.5,5893.5A6,6,0,1,1,1085.5,5893.5A6,6,0,1,1,1097.5,5893.5"></path><path id="kity_path_1396" fill="none" stroke="gray"></path></g><path id="node_outline150" fill="none" stroke="none" d="M1102.5,5882.5h326a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-326a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text150" fill="black"><text id="kity_text_704" text-rendering="inherit" font-size="12" dy=".8em" y="5887.5" x="1107.5">无论配置的最大状态大小如何，状态都不能大于akka帧大小</text></g></g><g id="minder_node155"><g id="node_expander150" display="none" style="cursor: pointer;"><path id="kity_path_1398" fill="white" stroke="gray" d="M1097.5,5945.5A6,6,0,1,1,1085.5,5945.5A6,6,0,1,1,1097.5,5945.5"></path><path id="kity_path_1399" fill="none" stroke="gray"></path></g><path id="node_outline151" fill="none" stroke="none" d="M1102.5,5934.5h206a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-206a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text151" fill="black"><text id="kity_text_706" text-rendering="inherit" font-size="12" dy=".8em" y="5939.5" x="1107.5">聚合状态必须适合JobManager内存</text></g></g><g id="minder_node156"><g id="node_expander154" style="cursor: pointer;"><path id="kity_path_1410" fill="white" stroke="gray" d="M1001.5,6023.5A6,6,0,1,1,989.5,6023.5A6,6,0,1,1,1001.5,6023.5"></path><path id="kity_path_1411" fill="none" stroke="gray" d="M991,6023.5L1000,6023.5"></path></g><path id="node_outline155" fill="none" stroke="none" d="M1006.5,6012.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text155" fill="black"><text id="kity_text_714" text-rendering="inherit" font-size="12" dy=".8em" y="6017.5" x="1011.5">应用场景</text></g></g><g id="minder_node157"><g id="node_expander152" display="none" style="cursor: pointer;"><path id="kity_path_1404" fill="white" stroke="gray" d="M1109.5,5997.5A6,6,0,1,1,1097.5,5997.5A6,6,0,1,1,1109.5,5997.5"></path><path id="kity_path_1405" fill="none" stroke="gray"></path></g><path id="node_outline153" fill="none" stroke="none" d="M1114.5,5986.5h202a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-202a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text153" fill="black"><text id="kity_text_710" text-rendering="inherit" font-size="12" dy=".8em" y="5991.5" x="1119.5">本地开发和调试，因为它的状态有限</text></g></g><g id="minder_node158"><g id="node_expander153" display="none" style="cursor: pointer;"><path id="kity_path_1407" fill="white" stroke="gray" d="M1109.5,6049.5A6,6,0,1,1,1097.5,6049.5A6,6,0,1,1,1109.5,6049.5"></path><path id="kity_path_1408" fill="none" stroke="gray"></path></g><path id="node_outline154" fill="none" stroke="none" d="M1114.5,6038.5h562a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-562a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text154" fill="black"><text id="kity_text_712" text-rendering="inherit" font-size="12" dy=".8em" y="6043.5" x="1119.5">适合很少状态的作业，如仅包含一次记录功能（Map，FlatMap或Filter）的作业或使用Kafkaconsumer</text></g></g><g id="minder_node159"><g id="node_expander161" style="cursor: pointer;"><path id="kity_path_1431" fill="white" stroke="gray" d="M763.5,6295.5A6,6,0,1,1,751.5,6295.5A6,6,0,1,1,763.5,6295.5"></path><path id="kity_path_1432" fill="none" stroke="gray" d="M753,6295.5L762,6295.5"></path></g><path id="node_outline162" fill="none" stroke="none" d="M768.5,6266.5h103a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-103a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text162" fill="black"><text id="kity_text_728" text-rendering="inherit" font-size="12" dy=".8em" y="6271.5" x="773.5">FsStateBackend</text><text id="kity_text_1679" text-rendering="inherit" font-size="12" dy=".8em" y="6289.5" x="773.5"></text><text id="kity_text_1680" text-rendering="inherit" font-size="12" dy=".8em" y="6307.5" x="773.5">-大</text></g></g><g id="minder_node160"><g id="node_expander160" style="cursor: pointer;"><path id="kity_path_1428" fill="white" stroke="gray" d="M916.5,6204.5A6,6,0,1,1,904.5,6204.5A6,6,0,1,1,916.5,6204.5"></path><path id="kity_path_1429" fill="none" stroke="gray" d="M906,6204.5L915,6204.5"></path></g><path id="node_outline161" fill="none" stroke="none" d="M921.5,6193.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text161" fill="black"><text id="kity_text_726" text-rendering="inherit" font-size="12" dy=".8em" y="6198.5" x="926.5">描述</text></g></g><g id="minder_node161"><g id="node_expander156" display="none" style="cursor: pointer;"><path id="kity_path_1416" fill="white" stroke="gray" d="M1000.5,6100.5A6,6,0,1,1,988.5,6100.5A6,6,0,1,1,1000.5,6100.5"></path><path id="kity_path_1417" fill="none" stroke="gray"></path></g><path id="node_outline157" fill="none" stroke="none" d="M1005.5,6089.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text157" fill="black"><text id="kity_text_718" text-rendering="inherit" font-size="12" dy=".8em" y="6094.5" x="1010.5">基于文件系统</text></g></g><g id="minder_node162"><g id="node_expander157" display="none" style="cursor: pointer;"><path id="kity_path_1419" fill="white" stroke="gray" d="M1000.5,6152.5A6,6,0,1,1,988.5,6152.5A6,6,0,1,1,1000.5,6152.5"></path><path id="kity_path_1420" fill="none" stroke="gray"></path></g><path id="node_outline158" fill="none" stroke="none" d="M1005.5,6141.5h268a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-268a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text158" fill="black"><text id="kity_text_720" text-rendering="inherit" font-size="12" dy=".8em" y="6146.5" x="1010.5">将正在运行的数据保存在TaskManager的内存中</text></g></g><g id="minder_node163"><g id="node_expander158" display="none" style="cursor: pointer;"><path id="kity_path_1422" fill="white" stroke="gray" d="M1000.5,6204.5A6,6,0,1,1,988.5,6204.5A6,6,0,1,1,1000.5,6204.5"></path><path id="kity_path_1423" fill="none" stroke="gray"></path></g><path id="node_outline159" fill="none" stroke="none" d="M1005.5,6193.5h359a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-359a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text159" fill="black"><text id="kity_text_722" text-rendering="inherit" font-size="12" dy=".8em" y="6198.5" x="1010.5">在检查点时，它将状态SNAPSHOT写入配置的文件系统和目录中。</text></g></g><g id="minder_node164"><g id="node_expander159" display="none" style="cursor: pointer;"><path id="kity_path_1425" fill="white" stroke="gray" d="M1000.5,6256.5A6,6,0,1,1,988.5,6256.5A6,6,0,1,1,1000.5,6256.5"></path><path id="kity_path_1426" fill="none" stroke="gray"></path></g><path id="node_outline160" fill="none" stroke="none" d="M1005.5,6245.5h752a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-752a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text160" fill="black"><text id="kity_text_724" text-rendering="inherit" font-size="12" dy=".8em" y="6250.5" x="1010.5">最小元数据（&#xa0;Minimal metadata）存储在JobManager的内存中（或者，在高可用性模式下，存储在元数据检查点中（Zookeeper））。</text></g></g><g id="minder_node165"><g id="node_expander162" style="cursor: pointer;"><path id="kity_path_1434" fill="white" stroke="gray" d="M763.5,6777.5A6,6,0,1,1,751.5,6777.5A6,6,0,1,1,763.5,6777.5"></path><path id="kity_path_1435" fill="none" stroke="gray" d="M753,6777.5L762,6777.5"></path></g><path id="node_outline163" fill="none" stroke="none" d="M768.5,6748.5h142a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-142a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text163" fill="black"><text id="kity_text_730" text-rendering="inherit" font-size="12" dy=".8em" y="6753.5" x="773.5">RocksDBStateBackend</text><text id="kity_text_1689" text-rendering="inherit" font-size="12" dy=".8em" y="6771.5" x="773.5"></text><text id="kity_text_1690" text-rendering="inherit" font-size="12" dy=".8em" y="6789.5" x="773.5">-超大</text></g></g><g id="minder_node166"><g id="node_expander170" style="cursor: pointer;"><path id="kity_path_1458" fill="white" stroke="gray" d="M523.5,7190.5A6,6,0,1,1,511.5,7190.5A6,6,0,1,1,523.5,7190.5"></path><path id="kity_path_1459" fill="none" stroke="gray" d="M513,7190.5L522,7190.5"></path></g><path id="node_outline171" fill="none" stroke="none" d="M528.5,7179.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text171" fill="black"><text id="kity_text_747" text-rendering="inherit" font-size="12" dy=".8em" y="7184.5" x="533.5">配置</text></g></g><g id="minder_node167"><g id="node_expander166" style="cursor: pointer;"><path id="kity_path_1446" fill="white" stroke="gray" d="M607.5,7134.5A6,6,0,1,1,595.5,7134.5A6,6,0,1,1,607.5,7134.5"></path><path id="kity_path_1447" fill="none" stroke="gray" d="M597,7134.5L606,7134.5"></path></g><path id="node_outline167" fill="none" stroke="none" d="M612.5,7123.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text167" fill="black"><text id="kity_text_738" text-rendering="inherit" font-size="12" dy=".8em" y="7128.5" x="617.5">默认全局配置</text></g></g><g id="minder_node168"><g id="node_expander164" display="none" style="cursor: pointer;"><path id="kity_path_1440" fill="white" stroke="gray" d="M739.5,7108.5A6,6,0,1,1,727.5,7108.5A6,6,0,1,1,739.5,7108.5"></path><path id="kity_path_1441" fill="none" stroke="gray"></path></g><path id="node_outline165" fill="none" stroke="none" d="M744.5,7097.5h370a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-370a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text165" fill="black"><text id="kity_text_734" text-rendering="inherit" font-size="12" dy=".8em" y="7102.5" x="749.5">默认情况下，配置文件flink-conf.yaml确定所有Flink作业的状态后台</text></g></g><g id="minder_node169"><g id="node_expander165" display="none" style="cursor: pointer;"><path id="kity_path_1443" fill="white" stroke="gray" d="M739.5,7160.5A6,6,0,1,1,727.5,7160.5A6,6,0,1,1,739.5,7160.5"></path><path id="kity_path_1444" fill="none" stroke="gray"></path></g><path id="node_outline166" fill="none" stroke="none" d="M744.5,7149.5h228a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-228a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text166" fill="black"><text id="kity_text_736" text-rendering="inherit" font-size="12" dy=".8em" y="7154.5" x="749.5">state.backend、state.checkpoints.dir</text></g></g><g id="minder_node170"><g id="node_expander169" style="cursor: pointer;"><path id="kity_path_1455" fill="white" stroke="gray" d="M607.5,7247.5A6,6,0,1,1,595.5,7247.5A6,6,0,1,1,607.5,7247.5"></path><path id="kity_path_1456" fill="none" stroke="gray" d="M597,7247.5L606,7247.5"></path></g><path id="node_outline170" fill="none" stroke="none" d="M612.5,7236.5h112a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-112a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text170" fill="black"><text id="kity_text_745" text-rendering="inherit" font-size="12" dy=".8em" y="7241.5" x="617.5">对每个job单独配置</text></g></g><g id="minder_node171"><g id="node_expander167" display="none" style="cursor: pointer;"><path id="kity_path_1449" fill="white" stroke="gray" d="M769.5,7212.5A6,6,0,1,1,757.5,7212.5A6,6,0,1,1,769.5,7212.5"></path><path id="kity_path_1450" fill="none" stroke="gray"></path></g><path id="node_outline168" fill="none" stroke="none" d="M774.5,7201.5h282a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-282a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text168" fill="black"><text id="kity_text_740" text-rendering="inherit" font-size="12" dy=".8em" y="7206.5" x="779.5">针对此job的StreamExecutionEnvironment来配置</text></g></g><g id="minder_node172"><g id="node_expander168" display="none" style="cursor: pointer;"><path id="kity_path_1452" fill="white" stroke="gray" d="M769.5,7273.5A6,6,0,1,1,757.5,7273.5A6,6,0,1,1,769.5,7273.5"></path><path id="kity_path_1453" fill="none" stroke="gray"></path></g><path id="node_outline169" fill="none" stroke="none" d="M774.5,7253.5h524a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-524a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text169" fill="#ff0000"><text id="kity_text_742" text-rendering="inherit" font-size="12" dy=".8em" y="7258.5" x="779.5">val env = StreamExecutionEnvironment.getExecutionEnvironment()</text><text id="kity_text_743" text-rendering="inherit" font-size="12" dy=".8em" y="7276.5" x="779.5">env.setStateBackend(new FsStateBackend("hdfs://namenode:40010/flink/checkpoints"))</text></g></g><g id="minder_node173"><g id="node_expander172" display="none" style="cursor: pointer;"><path id="kity_path_1469" fill="white" stroke="gray" d="M1000.5,6308.5A6,6,0,1,1,988.5,6308.5A6,6,0,1,1,1000.5,6308.5"></path><path id="kity_path_1470" fill="none" stroke="gray"></path></g><path id="node_outline173" fill="none" stroke="none" d="M1005.5,6297.5h792a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-792a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text173" fill="black"><text id="kity_text_1466" text-rendering="inherit" font-size="12" dy=".8em" y="6302.5" x="1010.5">FsStateBackend&#xa0;默认使用异步SNAPSHOT，以避免在编写状态检查点时阻塞处理管道。（禁用的话可以使用new FsStateBackend(path, false);）</text></g></g><g id="minder_node174"><g id="node_expander173" style="cursor: pointer;"><path id="kity_path_1483" fill="white" stroke="gray" d="M916.5,6386.5A6,6,0,1,1,904.5,6386.5A6,6,0,1,1,916.5,6386.5"></path><path id="kity_path_1484" fill="none" stroke="gray" d="M906,6386.5L915,6386.5"></path></g><path id="node_outline174" fill="none" stroke="none" d="M921.5,6375.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text174" fill="black"><text id="kity_text_1480" text-rendering="inherit" font-size="12" dy=".8em" y="6380.5" x="926.5">使用场景</text></g></g><g id="minder_node177"><g id="node_expander176" display="none" style="cursor: pointer;"><path id="kity_path_1507" fill="white" stroke="gray" d="M1024.5,6360.5A6,6,0,1,1,1012.5,6360.5A6,6,0,1,1,1024.5,6360.5"></path><path id="kity_path_1508" fill="none" stroke="gray"></path></g><path id="node_outline177" fill="none" stroke="none" d="M1029.5,6349.5h351a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-351a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text177" fill="black"><text id="kity_text_1504" text-rendering="inherit" font-size="12" dy=".8em" y="6354.5" x="1034.5">Jobs with large state, long windows, large key/value states.</text></g></g><g id="minder_node178"><g id="node_expander177" display="none" style="cursor: pointer;"><path id="kity_path_1515" fill="white" stroke="gray" d="M1024.5,6412.5A6,6,0,1,1,1012.5,6412.5A6,6,0,1,1,1024.5,6412.5"></path><path id="kity_path_1516" fill="none" stroke="gray"></path></g><path id="node_outline178" fill="none" stroke="none" d="M1029.5,6401.5h269a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-269a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text178" fill="black"><text id="kity_text_1512" text-rendering="inherit" font-size="12" dy=".8em" y="6406.5" x="1034.5">所有高可用性设置。All high-availability setups.</text></g></g><g id="minder_node179"><g id="node_expander178" style="cursor: pointer;"><path id="kity_path_1526" fill="white" stroke="gray" d="M955.5,6568.5A6,6,0,1,1,943.5,6568.5A6,6,0,1,1,955.5,6568.5"></path><path id="kity_path_1527" fill="none" stroke="gray" d="M945,6568.5L954,6568.5"></path></g><path id="node_outline179" fill="none" stroke="none" d="M960.5,6557.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text179" fill="black"><text id="kity_text_1523" text-rendering="inherit" font-size="12" dy=".8em" y="6562.5" x="965.5">描述</text></g></g><g id="minder_node180"><g id="node_expander179" display="none" style="cursor: pointer;"><path id="kity_path_1534" fill="white" stroke="gray" d="M1039.5,6464.5A6,6,0,1,1,1027.5,6464.5A6,6,0,1,1,1039.5,6464.5"></path><path id="kity_path_1535" fill="none" stroke="gray"></path></g><path id="node_outline180" fill="none" stroke="none" d="M1044.5,6453.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text180" fill="black"><text id="kity_text_1531" text-rendering="inherit" font-size="12" dy=".8em" y="6458.5" x="1049.5">基于文件系统</text></g></g><g id="minder_node181"><g id="node_expander180" display="none" style="cursor: pointer;"><path id="kity_path_1542" fill="white" stroke="gray" d="M1039.5,6516.5A6,6,0,1,1,1027.5,6516.5A6,6,0,1,1,1039.5,6516.5"></path><path id="kity_path_1543" fill="none" stroke="gray"></path></g><path id="node_outline181" fill="none" stroke="none" d="M1044.5,6505.5h354a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-354a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text181" fill="black"><text id="kity_text_1539" text-rendering="inherit" font-size="12" dy=".8em" y="6510.5" x="1049.5">将RocksDB中正在运行的数据保存在TaskManager数据目录中。</text></g></g><g id="minder_node182"><g id="node_expander181" display="none" style="cursor: pointer;"><path id="kity_path_1551" fill="white" stroke="gray" d="M1039.5,6568.5A6,6,0,1,1,1027.5,6568.5A6,6,0,1,1,1039.5,6568.5"></path><path id="kity_path_1552" fill="none" stroke="gray"></path></g><path id="node_outline182" fill="none" stroke="none" d="M1044.5,6557.5h454a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-454a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text182" fill="black"><text id="kity_text_1548" text-rendering="inherit" font-size="12" dy=".8em" y="6562.5" x="1049.5">在检查点时，整个RocksDB数据库将被checkpointed到配置的文件系统和目录中。</text></g></g><g id="minder_node183"><g id="node_expander182" display="none" style="cursor: pointer;"><path id="kity_path_1560" fill="white" stroke="gray" d="M1039.5,6620.5A6,6,0,1,1,1027.5,6620.5A6,6,0,1,1,1039.5,6620.5"></path><path id="kity_path_1561" fill="none" stroke="gray"></path></g><path id="node_outline183" fill="none" stroke="none" d="M1044.5,6609.5h617a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-617a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text183" fill="black"><text id="kity_text_1557" text-rendering="inherit" font-size="12" dy=".8em" y="6614.5" x="1049.5">最小元数据存储在JobManager的内存中（或者，在高可用性模式下，存储在元数据检查点中（Zookeeper））。</text></g></g><g id="minder_node184"><g id="node_expander183" display="none" style="cursor: pointer;"><path id="kity_path_1568" fill="white" stroke="gray" d="M1039.5,6672.5A6,6,0,1,1,1027.5,6672.5A6,6,0,1,1,1039.5,6672.5"></path><path id="kity_path_1569" fill="none" stroke="gray"></path></g><path id="node_outline184" fill="none" stroke="none" d="M1044.5,6661.5h286a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-286a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text184" fill="black"><text id="kity_text_1565" text-rendering="inherit" font-size="12" dy=".8em" y="6666.5" x="1049.5">RocksDBStateBackend始终执行异步SNAPSHOT。</text></g></g><g id="minder_node185"><g id="node_expander184" style="cursor: pointer;"><path id="kity_path_1576" fill="white" stroke="gray" d="M955.5,6742.5A6,6,0,1,1,943.5,6742.5A6,6,0,1,1,955.5,6742.5"></path><path id="kity_path_1577" fill="none" stroke="gray" d="M945,6742.5L954,6742.5"></path></g><path id="node_outline185" fill="none" stroke="none" d="M960.5,6731.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text185" fill="black"><text id="kity_text_1573" text-rendering="inherit" font-size="12" dy=".8em" y="6736.5" x="965.5">局限性</text></g></g><g id="minder_node186"><g id="node_expander185" display="none" style="cursor: pointer;"><path id="kity_path_1584" fill="white" stroke="gray" d="M1051.5,6742.5A6,6,0,1,1,1039.5,6742.5A6,6,0,1,1,1051.5,6742.5"></path><path id="kity_path_1585" fill="none" stroke="gray"></path></g><path id="node_outline186" fill="none" stroke="none" d="M1056.5,6713.5h717a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-717a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text186" fill="black"><text id="kity_text_1581" text-rendering="inherit" font-size="12" dy=".8em" y="6718.5" x="1061.5">由于RocksDB的JNI桥接API基于byte []，因此每个Keys和每个值的最大支持大小为2 ^ 31个字节。</text><text id="kity_text_1586" text-rendering="inherit" font-size="12" dy=".8em" y="6736.5" x="1061.5">重要提示：在RocksDB中使用合并 算子操作的状态（例如ListState）可以静默地累积&gt; 2 ^ 31字节的值大小，然后在下次检索时失败。</text><text id="kity_text_1587" text-rendering="inherit" font-size="12" dy=".8em" y="6754.5" x="1061.5">这是目前RocksDB JNI的一个限制。</text></g></g><g id="minder_node187"><g id="node_expander186" style="cursor: pointer;"><path id="kity_path_1594" fill="white" stroke="gray" d="M955.5,6838.5A6,6,0,1,1,943.5,6838.5A6,6,0,1,1,955.5,6838.5"></path><path id="kity_path_1595" fill="none" stroke="gray" d="M945,6838.5L954,6838.5"></path></g><path id="node_outline187" fill="none" stroke="none" d="M960.5,6827.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text187" fill="black"><text id="kity_text_1591" text-rendering="inherit" font-size="12" dy=".8em" y="6832.5" x="965.5">使用场景</text></g></g><g id="minder_node190"><g id="node_expander189" display="none" style="cursor: pointer;"><path id="kity_path_1618" fill="white" stroke="gray" d="M1063.5,6812.5A6,6,0,1,1,1051.5,6812.5A6,6,0,1,1,1063.5,6812.5"></path><path id="kity_path_1619" fill="none" stroke="gray"></path></g><path id="node_outline190" fill="none" stroke="none" d="M1068.5,6801.5h378a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-378a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text190" fill="black"><text id="kity_text_1615" text-rendering="inherit" font-size="12" dy=".8em" y="6806.5" x="1073.5">Jobs with very large state, long windows, large key/value states.</text></g></g><g id="minder_node191"><g id="node_expander190" display="none" style="cursor: pointer;"><path id="kity_path_1626" fill="white" stroke="gray" d="M1063.5,6864.5A6,6,0,1,1,1051.5,6864.5A6,6,0,1,1,1063.5,6864.5"></path><path id="kity_path_1627" fill="none" stroke="gray"></path></g><path id="node_outline191" fill="none" stroke="none" d="M1068.5,6853.5h269a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-269a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text191" fill="black"><text id="kity_text_1623" text-rendering="inherit" font-size="12" dy=".8em" y="6858.5" x="1073.5">所有高可用性设置。All high-availability setups.</text></g></g><g id="minder_node192"><g id="node_expander191" style="cursor: pointer;"><path id="kity_path_1634" fill="white" stroke="gray" d="M955.5,6986.5A6,6,0,1,1,943.5,6986.5A6,6,0,1,1,955.5,6986.5"></path><path id="kity_path_1635" fill="none" stroke="gray" d="M945,6986.5L954,6986.5"></path></g><path id="node_outline192" fill="none" stroke="none" d="M960.5,6975.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text192" fill="black"><text id="kity_text_1631" text-rendering="inherit" font-size="12" dy=".8em" y="6980.5" x="965.5">特点</text></g></g><g id="minder_node193"><g id="node_expander192" display="none" style="cursor: pointer;"><path id="kity_path_1642" fill="white" stroke="gray" d="M1039.5,6916.5A6,6,0,1,1,1027.5,6916.5A6,6,0,1,1,1039.5,6916.5"></path><path id="kity_path_1643" fill="none" stroke="gray"></path></g><path id="node_outline193" fill="none" stroke="none" d="M1044.5,6905.5h638a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-638a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text193" fill="black"><text id="kity_text_1639" text-rendering="inherit" font-size="12" dy=".8em" y="6910.5" x="1049.5">使用RocksDB时，状态大小仅受可用磁盘空间量的限制，这使RocksDBStateBackend成为管理超大状态的绝佳选择。&#xa0;</text></g></g><g id="minder_node194"><g id="node_expander193" display="none" style="cursor: pointer;"><path id="kity_path_1650" fill="white" stroke="gray" d="M1039.5,6986.5A6,6,0,1,1,1027.5,6986.5A6,6,0,1,1,1039.5,6986.5"></path><path id="kity_path_1651" fill="none" stroke="gray"></path></g><path id="node_outline194" fill="none" stroke="none" d="M1044.5,6957.5h768a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-768a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text194" fill="black"><text id="kity_text_1647" text-rendering="inherit" font-size="12" dy=".8em" y="6962.5" x="1049.5">使用RocksDB时的权衡是所有状态访问和检索都需要序列化（或反序列化）才能跨越JNI边界。</text><text id="kity_text_1652" text-rendering="inherit" font-size="12" dy=".8em" y="6980.5" x="1049.5">即所有读/写都必须通过去/序列化来检索/存储状态对象，&#xa0;与上面提到的 on-heap（内存） backends相比，这可能会影响应用程序的吞吐量。</text><text id="kity_text_1654" text-rendering="inherit" font-size="12" dy=".8em" y="6998.5" x="1049.5">（&#xa0;All reads/writes from/to this backend have to go through de-/serialization to retrieve/store the state objects）</text></g></g><g id="minder_node195"><g id="node_expander194" display="none" style="cursor: pointer;"><path id="kity_path_1662" fill="white" stroke="gray" d="M1039.5,7056.5A6,6,0,1,1,1027.5,7056.5A6,6,0,1,1,1039.5,7056.5"></path><path id="kity_path_1663" fill="none" stroke="gray" d="M1029,7056.5L1038,7056.5"></path></g><path id="node_outline195" fill="none" stroke="none" d="M1044.5,7045.5h351a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-351a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text195" fill="black"><text id="kity_text_1659" text-rendering="inherit" font-size="12" dy=".8em" y="7050.5" x="1049.5">RocksDBStateBackend是目前唯一提供增量检查点的backend</text></g></g><g id="minder_node198"><g id="node_expander197" style="cursor: pointer;"><path id="kity_path_1697" fill="white" stroke="gray" d="M337.5,7467.5A6,6,0,1,1,325.5,7467.5A6,6,0,1,1,337.5,7467.5"></path><path id="kity_path_1698" fill="none" stroke="gray" d="M327,7467.5L336,7467.5"></path></g><path id="node_outline198" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M341.5,7454.5h150a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-150a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text198" fill="black"><text id="kity_text_1694" text-rendering="inherit" font-size="14" dy=".8em" y="7460.5" x="358.5">Savepoints保存点</text></g></g><g id="minder_node199"><g id="node_expander198" style="cursor: pointer;"><path id="kity_path_1705" fill="white" stroke="gray" d="M534.5,7369.5A6,6,0,1,1,522.5,7369.5A6,6,0,1,1,534.5,7369.5"></path><path id="kity_path_1706" fill="none" stroke="gray" d="M524,7369.5L533,7369.5"></path></g><path id="node_outline199" fill="none" stroke="none" d="M539.5,7358.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text199" fill="black"><text id="kity_text_1702" text-rendering="inherit" font-size="12" dy=".8em" y="7363.5" x="544.5">概念</text></g></g><g id="minder_node200"><g id="node_expander199" display="none" style="cursor: pointer;"><path id="kity_path_1713" fill="white" stroke="gray" d="M618.5,7343.5A6,6,0,1,1,606.5,7343.5A6,6,0,1,1,618.5,7343.5"></path><path id="kity_path_1714" fill="none" stroke="gray"></path></g><path id="node_outline200" fill="none" stroke="none" d="M623.5,7332.5h633a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-633a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text200" fill="black"><text id="kity_text_1710" text-rendering="inherit" font-size="12" dy=".8em" y="7337.5" x="628.5">使用Data Stream API的程序可以从指定的保存点恢复。保存点可以更新程序和Flink集群，并且不丢失任何状态的功能</text></g></g><g id="minder_node201"><g id="node_expander200" style="cursor: pointer;"><path id="kity_path_1721" fill="white" stroke="gray" d="M534.5,7565.5A6,6,0,1,1,522.5,7565.5A6,6,0,1,1,534.5,7565.5"></path><path id="kity_path_1722" fill="none" stroke="gray" d="M524,7565.5L533,7565.5"></path></g><path id="node_outline201" fill="none" stroke="none" d="M539.5,7554.5h125a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-125a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text201" fill="black"><text id="kity_text_1718" text-rendering="inherit" font-size="12" dy=".8em" y="7559.5" x="544.5">与checkpoint的比较</text></g></g><g id="minder_node202"><g id="node_expander201" display="none" style="cursor: pointer;"><path id="kity_path_1729" fill="white" stroke="gray" d="M709.5,7448.5A6,6,0,1,1,697.5,7448.5A6,6,0,1,1,709.5,7448.5"></path><path id="kity_path_1730" fill="none" stroke="gray"></path></g><path id="node_outline202" fill="none" stroke="none" d="M714.5,7437.5h464a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-464a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text202" fill="black"><text id="kity_text_1726" text-rendering="inherit" font-size="12" dy=".8em" y="7442.5" x="719.5">相对于checkpoint来比较，checkpoint是针对于内部的，savepoint是针对于外部的</text></g></g><g id="minder_node203" opacity="1"><g id="node_expander202" display="none" style="cursor: pointer;"><path id="kity_path_1737" fill="white" stroke="gray" d="M817.5,7622.5A6,6,0,1,1,805.5,7622.5A6,6,0,1,1,817.5,7622.5"></path><path id="kity_path_1738" fill="none" stroke="gray"></path></g><path id="node_outline203" fill="none" stroke="none" d="M822.5,7611.5h370a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-370a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text203" fill="black"><text id="kity_text_1734" text-rendering="inherit" font-size="12" dy=".8em" y="7616.5" x="827.5">保存点是由用户触发的，并且在新的检查点生成后不会自动过期失效</text></g></g><g id="minder_node204"><g id="node_expander203" display="none" style="cursor: pointer;"><path id="kity_path_1745" fill="white" stroke="gray" d="M618.5,7395.5A6,6,0,1,1,606.5,7395.5A6,6,0,1,1,618.5,7395.5"></path><path id="kity_path_1746" fill="none" stroke="gray"></path></g><path id="node_outline204" fill="none" stroke="none" d="M623.5,7384.5h694a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-694a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text204" fill="black"><text id="kity_text_1742" text-rendering="inherit" font-size="12" dy=".8em" y="7389.5" x="628.5">savepoint是手动触发的checkpoint，它会获取程序的SNAPSHOT并将其写入state backend。他们依靠常规的checkpoint机制</text></g></g><g id="minder_node205"><g id="node_expander204" style="cursor: pointer;"><path id="kity_path_1761" fill="white" stroke="gray" d="M709.5,7587.5A6,6,0,1,1,697.5,7587.5A6,6,0,1,1,709.5,7587.5"></path><path id="kity_path_1762" fill="none" stroke="gray" d="M699,7587.5L708,7587.5"></path></g><path id="node_outline205" fill="none" stroke="none" d="M714.5,7576.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text205" fill="black"><text id="kity_text_1758" text-rendering="inherit" font-size="12" dy=".8em" y="7581.5" x="719.5">失效问题</text></g></g><g id="minder_node206"><g id="node_expander205" display="none" style="cursor: pointer;"><path id="kity_path_1769" fill="white" stroke="gray" d="M817.5,7561.5A6,6,0,1,1,805.5,7561.5A6,6,0,1,1,817.5,7561.5"></path><path id="kity_path_1770" fill="none" stroke="gray"></path></g><path id="node_outline206" fill="none" stroke="none" d="M822.5,7541.5h689a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-689a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text206" fill="black"><text id="kity_text_1766" text-rendering="inherit" font-size="12" dy=".8em" y="7546.5" x="827.5">程序执行时会定期在worker节点生成快照和checkpoint。</text><text id="kity_text_1771" text-rendering="inherit" font-size="12" dy=".8em" y="7564.5" x="827.5">由于Flink的恢复机制只需要使用最新一个有效的checkpoint，在新的checkpoint生成后就可以安全移除其余旧的checkpoint了</text></g></g><g id="minder_node207" opacity="1"><g id="node_expander206" display="none" style="cursor: pointer;"><path id="kity_path_1779" fill="white" stroke="gray" d="M709.5,7500.5A6,6,0,1,1,697.5,7500.5A6,6,0,1,1,709.5,7500.5"></path><path id="kity_path_1780" fill="none" stroke="gray"></path></g><path id="node_outline207" fill="none" stroke="none" d="M714.5,7489.5h194a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-194a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text207" fill="black"><text id="kity_text_1776" text-rendering="inherit" font-size="12" dy=".8em" y="7494.5" x="719.5">checkpoint自动，savepoint手动</text></g></g><g id="kity_g_12" display="none"><path id="kity_path_13" fill="none" stroke="rgb(66, 94, 112)" d="M822.5,7497.5h701a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-701a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="5"></path></g><g id="minder_node208"><g id="node_expander207" style="cursor: pointer;"><path id="kity_path_1787" fill="white" stroke="gray" d="M709.5,7683.5A6,6,0,1,1,697.5,7683.5A6,6,0,1,1,709.5,7683.5"></path><path id="kity_path_1788" fill="none" stroke="gray" d="M699,7683.5L708,7683.5"></path></g><path id="node_outline208" fill="none" stroke="none" d="M714.5,7672.5h113a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-113a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text208" fill="black"><text id="kity_text_1784" text-rendering="inherit" font-size="12" dy=".8em" y="7677.5" x="719.5">举例，与spark比较</text></g></g><g id="minder_node209"><g id="node_expander208" display="none" style="cursor: pointer;"><path id="kity_path_1795" fill="white" stroke="gray" d="M872.5,7683.5A6,6,0,1,1,860.5,7683.5A6,6,0,1,1,872.5,7683.5"></path><path id="kity_path_1796" fill="none" stroke="gray"></path></g><path id="node_outline209" fill="none" stroke="none" d="M877.5,7663.5h782a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-782a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text209" fill="black"><text id="kity_text_1792" text-rendering="inherit" font-size="12" dy=".8em" y="7668.5" x="882.5">SparkStreaming中，如果使用了checkpoint，流处理程序有更新的话，进行程序替换需要清理调checkpoint才能生效，</text><text id="kity_text_1797" text-rendering="inherit" font-size="12" dy=".8em" y="7686.5" x="882.5">而在flink中，可以在流处理程序更新后，手动添加savepoint，那么新程序能从savepoint的地方开始读取数据，能与老程序并行存在或者直接替换</text></g></g></g></g></svg>